Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BINARY
    BREAK
    CIENTIFIC
    CONTINUE
    EXTENDS
    FLOAT
    HEXADEC
    LENGTH
    LINECOMMENT
    MULTILINECOMMENT
    NULL
    STRING
    UMINUS

Grammar

Rule 0     S' -> Program
Rule 1     Program -> ClassDeclarationList
Rule 2     ClassDeclarationList -> ClassDeclaration ClassDeclarationList
Rule 3     ClassDeclarationList -> lambda
Rule 4     ClassDeclaration -> CLASS IDEN LEFTBRACE FieldMethDecl RIGHTBRACE
Rule 5     FieldMethDecl -> FieldMeth FieldMethDecl
Rule 6     FieldMethDecl -> lambda
Rule 7     FieldMeth -> FieldDeclaration
Rule 8     FieldMeth -> MethodDeclaration
Rule 9     FieldDeclaration -> Declarators IDEN SEMICOLON
Rule 10    Declarators -> Access Static Type
Rule 11    Access -> PUBLIC
Rule 12    Access -> PRIVATE
Rule 13    Access -> lambda
Rule 14    Static -> STATIC
Rule 15    Static -> lambda
Rule 16    MethodDeclaration -> Declarators IDEN LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE StatementList MethodReturn RIGHTBRACE
Rule 17    ParameterList -> Parameter
Rule 18    ParameterList -> lambda
Rule 19    Parameter -> Type IDEN CommaParameter
Rule 20    CommaParameter -> CommaTypeId CommaParameter
Rule 21    CommaParameter -> lambda
Rule 22    CommaTypeId -> COMMA Type IDEN
Rule 23    StatementList -> Statement StatementList
Rule 24    StatementList -> lambda
Rule 25    MethodReturn -> RETURN Expression SEMICOLON
Rule 26    MethodReturn -> lambda
Rule 27    Type -> PrimType
Rule 28    Type -> ClassType
Rule 29    Type -> ArrType
Rule 30    PrimType -> INT
Rule 31    PrimType -> BOOLEAN
Rule 32    PrimType -> VOID
Rule 33    ClassType -> IDEN
Rule 34    ArrType -> ArrayType LEFTSQRBRACKET RIGHTSQRBRACKET
Rule 35    ArrayType -> INT
Rule 36    ArrayType -> ClassType
Rule 37    ArgumentList -> Argument
Rule 38    ArgumentList -> lambda
Rule 39    Argument -> Expression CommaExpressionList
Rule 40    CommaExpressionList -> CommaExpression CommaExpressionList
Rule 41    CommaExpressionList -> lambda
Rule 42    CommaExpression -> COMMA Expression
Rule 43    Reference -> ReferenceType DotIdList
Rule 44    ReferenceType -> THIS
Rule 45    ReferenceType -> IDEN
Rule 46    DotIdList -> DotId DotIdList
Rule 47    DotIdList -> lambda
Rule 48    DotId -> DOT IDEN
Rule 49    Statement -> LeftBraceStatementRightBracet
Rule 50    Statement -> TypeAssign
Rule 51    Statement -> ReferenceAssign
Rule 52    Statement -> ReferenceArgumantSemicolon
Rule 53    Statement -> IfStatement
Rule 54    Statement -> WhileStatement
Rule 55    LeftBraceStatementRightBracet -> LEFTBRACE StatementList RIGHTBRACE
Rule 56    TypeAssign -> Type IDEN ASSIGNMENT Expression SEMICOLON
Rule 57    ReferenceAssign -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON
Rule 58    LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET
Rule 59    LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda
Rule 60    ReferenceArgumantSemicolon -> ReferenceArgumant SEMICOLON
Rule 61    ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT
Rule 62    IfStatement -> IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament
Rule 63    ElseStament -> ELSE Statement
Rule 64    ElseStament -> lambda
Rule 65    WhileStatement -> WHILE LEFTPARENT Expression RIGHTPARENT Statement
Rule 66    Expression -> ReferenceExpression
Rule 67    Expression -> ReferenceArgumant
Rule 68    Expression -> UnopExpression
Rule 69    Expression -> LEFTPARENTExpressionRIGHTPARENT
Rule 70    Expression -> BinopExpression
Rule 71    Expression -> NUMBER
Rule 72    Expression -> TRUE
Rule 73    Expression -> FALSE
Rule 74    Expression -> NewInstance
Rule 75    ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
Rule 76    UnopExpression -> UnaryMinus
Rule 77    UnopExpression -> UnaryNot
Rule 78    UnaryNot -> NOT Expression
Rule 79    UnaryMinus -> SUBSTRACTION Expression
Rule 80    LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT
Rule 81    BinopExpression -> Expression ADDITION Expression
Rule 82    BinopExpression -> Expression SUBSTRACTION Expression
Rule 83    BinopExpression -> Expression MULTIPLICATION Expression
Rule 84    BinopExpression -> Expression DIVISION Expression
Rule 85    BinopExpression -> Expression MODULO Expression
Rule 86    BinopExpression -> Expression AND Expression
Rule 87    BinopExpression -> Expression OR Expression
Rule 88    BinopExpression -> Expression CONCAT Expression
Rule 89    BinopExpression -> Expression LESS Expression
Rule 90    BinopExpression -> Expression LESSEQUAL Expression
Rule 91    BinopExpression -> Expression GREATER Expression
Rule 92    BinopExpression -> Expression GREATEREQUAL Expression
Rule 93    BinopExpression -> Expression EQUAL Expression
Rule 94    BinopExpression -> Expression NOTEQUAL Expression
Rule 95    NewInstance -> NEW NewObject
Rule 96    NewObject -> NewClass
Rule 97    NewObject -> NewIntArray
Rule 98    NewObject -> NewIdArray
Rule 99    NewClass -> IDEN LEFTPARENT RIGHTPARENT
Rule 100   NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET
Rule 101   NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET
Rule 102   lambda -> <empty>

Terminals, with rules where they appear

ADDITION             : 81
AND                  : 86
ASSIGNMENT           : 56 57
BINARY               : 
BOOLEAN              : 31
BREAK                : 
CIENTIFIC            : 
CLASS                : 4
COMMA                : 22 42
CONCAT               : 88
CONTINUE             : 
DIVISION             : 84
DOT                  : 48
ELSE                 : 63
EQUAL                : 93
EXTENDS              : 
FALSE                : 73
FLOAT                : 
GREATER              : 91
GREATEREQUAL         : 92
HEXADEC              : 
IDEN                 : 4 9 16 19 22 33 45 48 56 99 101
IF                   : 62
INT                  : 30 35 100
LEFTBRACE            : 4 16 55
LEFTPARENT           : 16 61 62 65 80 99
LEFTSQRBRACKET       : 34 58 100 101
LENGTH               : 
LESS                 : 89
LESSEQUAL            : 90
LINECOMMENT          : 
MODULO               : 85
MULTILINECOMMENT     : 
MULTIPLICATION       : 83
NEW                  : 95
NOT                  : 78
NOTEQUAL             : 94
NULL                 : 
NUMBER               : 71
OR                   : 87
PRIVATE              : 12
PUBLIC               : 11
RETURN               : 25
RIGHTBRACE           : 4 16 55
RIGHTPARENT          : 16 61 62 65 80 99
RIGHTSQRBRACKET      : 34 58 100 101
SEMICOLON            : 9 25 56 57 60
STATIC               : 14
STRING               : 
SUBSTRACTION         : 79 82
THIS                 : 44
TRUE                 : 72
UMINUS               : 
VOID                 : 32
WHILE                : 65
error                : 

Nonterminals, with rules where they appear

Access               : 10
Argument             : 37
ArgumentList         : 61
ArrType              : 29
ArrayType            : 34
BinopExpression      : 70
ClassDeclaration     : 2
ClassDeclarationList : 1 2
ClassType            : 28 36
CommaExpression      : 40
CommaExpressionList  : 39 40
CommaParameter       : 19 20
CommaTypeId          : 20
Declarators          : 9 16
DotId                : 46
DotIdList            : 43 46
ElseStament          : 62
Expression           : 25 39 42 56 57 58 62 65 78 79 80 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 100 101
FieldDeclaration     : 7
FieldMeth            : 5
FieldMethDecl        : 4 5
IfStatement          : 53
LEFTPARENTExpressionRIGHTPARENT : 69
LEFTSQRBRACKETExpressionRIGHTSQRBRACKET : 57 75
LeftBraceStatementRightBracet : 49
MethodDeclaration    : 8
MethodReturn         : 16
NewClass             : 96
NewIdArray           : 98
NewInstance          : 74
NewIntArray          : 97
NewObject            : 95
Parameter            : 17
ParameterList        : 16
PrimType             : 27
Program              : 0
Reference            : 57 61 75
ReferenceArgumant    : 60 67
ReferenceArgumantSemicolon : 52
ReferenceAssign      : 51
ReferenceExpression  : 66
ReferenceType        : 43
Statement            : 23 62 63 65
StatementList        : 16 23 55
Static               : 10
Type                 : 10 19 22 56
TypeAssign           : 50
UnaryMinus           : 76
UnaryNot             : 77
UnopExpression       : 68
WhileStatement       : 54
lambda               : 3 6 13 15 18 21 24 26 38 41 47 59 64

Parsing method: SLR

state 0

    (0) S' -> . Program
    (1) Program -> . ClassDeclarationList
    (2) ClassDeclarationList -> . ClassDeclaration ClassDeclarationList
    (3) ClassDeclarationList -> . lambda
    (4) ClassDeclaration -> . CLASS IDEN LEFTBRACE FieldMethDecl RIGHTBRACE
    (102) lambda -> .

    CLASS           shift and go to state 5
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    INT             reduce using rule 102 (lambda -> .)
    BOOLEAN         reduce using rule 102 (lambda -> .)
    VOID            reduce using rule 102 (lambda -> .)
    IDEN            reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    THIS            reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    COMMA           reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)

    Program                        shift and go to state 1
    ClassDeclarationList           shift and go to state 2
    ClassDeclaration               shift and go to state 3
    lambda                         shift and go to state 4

state 1

    (0) S' -> Program .



state 2

    (1) Program -> ClassDeclarationList .

    $end            reduce using rule 1 (Program -> ClassDeclarationList .)


state 3

    (2) ClassDeclarationList -> ClassDeclaration . ClassDeclarationList
    (2) ClassDeclarationList -> . ClassDeclaration ClassDeclarationList
    (3) ClassDeclarationList -> . lambda
    (4) ClassDeclaration -> . CLASS IDEN LEFTBRACE FieldMethDecl RIGHTBRACE
    (102) lambda -> .

    CLASS           shift and go to state 5
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    INT             reduce using rule 102 (lambda -> .)
    BOOLEAN         reduce using rule 102 (lambda -> .)
    VOID            reduce using rule 102 (lambda -> .)
    IDEN            reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    THIS            reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    COMMA           reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)

    ClassDeclaration               shift and go to state 3
    ClassDeclarationList           shift and go to state 6
    lambda                         shift and go to state 4

state 4

    (3) ClassDeclarationList -> lambda .

    $end            reduce using rule 3 (ClassDeclarationList -> lambda .)


state 5

    (4) ClassDeclaration -> CLASS . IDEN LEFTBRACE FieldMethDecl RIGHTBRACE

    IDEN            shift and go to state 7


state 6

    (2) ClassDeclarationList -> ClassDeclaration ClassDeclarationList .

    $end            reduce using rule 2 (ClassDeclarationList -> ClassDeclaration ClassDeclarationList .)


state 7

    (4) ClassDeclaration -> CLASS IDEN . LEFTBRACE FieldMethDecl RIGHTBRACE

    LEFTBRACE       shift and go to state 8


state 8

    (4) ClassDeclaration -> CLASS IDEN LEFTBRACE . FieldMethDecl RIGHTBRACE
    (5) FieldMethDecl -> . FieldMeth FieldMethDecl
    (6) FieldMethDecl -> . lambda
    (7) FieldMeth -> . FieldDeclaration
    (8) FieldMeth -> . MethodDeclaration
    (102) lambda -> .
    (9) FieldDeclaration -> . Declarators IDEN SEMICOLON
    (16) MethodDeclaration -> . Declarators IDEN LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE StatementList MethodReturn RIGHTBRACE
    (10) Declarators -> . Access Static Type
    (11) Access -> . PUBLIC
    (12) Access -> . PRIVATE
    (13) Access -> . lambda

    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    INT             reduce using rule 102 (lambda -> .)
    BOOLEAN         reduce using rule 102 (lambda -> .)
    VOID            reduce using rule 102 (lambda -> .)
    IDEN            reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    THIS            reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    COMMA           reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)
    PUBLIC          shift and go to state 16
    PRIVATE         shift and go to state 17

    FieldMethDecl                  shift and go to state 9
    FieldMeth                      shift and go to state 10
    lambda                         shift and go to state 11
    FieldDeclaration               shift and go to state 12
    MethodDeclaration              shift and go to state 13
    Declarators                    shift and go to state 14
    Access                         shift and go to state 15

state 9

    (4) ClassDeclaration -> CLASS IDEN LEFTBRACE FieldMethDecl . RIGHTBRACE

    RIGHTBRACE      shift and go to state 18


state 10

    (5) FieldMethDecl -> FieldMeth . FieldMethDecl
    (5) FieldMethDecl -> . FieldMeth FieldMethDecl
    (6) FieldMethDecl -> . lambda
    (7) FieldMeth -> . FieldDeclaration
    (8) FieldMeth -> . MethodDeclaration
    (102) lambda -> .
    (9) FieldDeclaration -> . Declarators IDEN SEMICOLON
    (16) MethodDeclaration -> . Declarators IDEN LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE StatementList MethodReturn RIGHTBRACE
    (10) Declarators -> . Access Static Type
    (11) Access -> . PUBLIC
    (12) Access -> . PRIVATE
    (13) Access -> . lambda

    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    INT             reduce using rule 102 (lambda -> .)
    BOOLEAN         reduce using rule 102 (lambda -> .)
    VOID            reduce using rule 102 (lambda -> .)
    IDEN            reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    THIS            reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    COMMA           reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)
    PUBLIC          shift and go to state 16
    PRIVATE         shift and go to state 17

    FieldMeth                      shift and go to state 10
    FieldMethDecl                  shift and go to state 19
    lambda                         shift and go to state 11
    FieldDeclaration               shift and go to state 12
    MethodDeclaration              shift and go to state 13
    Declarators                    shift and go to state 14
    Access                         shift and go to state 15

state 11

    (6) FieldMethDecl -> lambda .
    (13) Access -> lambda .

    RIGHTBRACE      reduce using rule 6 (FieldMethDecl -> lambda .)
    STATIC          reduce using rule 13 (Access -> lambda .)
    INT             reduce using rule 13 (Access -> lambda .)
    BOOLEAN         reduce using rule 13 (Access -> lambda .)
    VOID            reduce using rule 13 (Access -> lambda .)
    IDEN            reduce using rule 13 (Access -> lambda .)


state 12

    (7) FieldMeth -> FieldDeclaration .

    PUBLIC          reduce using rule 7 (FieldMeth -> FieldDeclaration .)
    PRIVATE         reduce using rule 7 (FieldMeth -> FieldDeclaration .)
    STATIC          reduce using rule 7 (FieldMeth -> FieldDeclaration .)
    INT             reduce using rule 7 (FieldMeth -> FieldDeclaration .)
    BOOLEAN         reduce using rule 7 (FieldMeth -> FieldDeclaration .)
    VOID            reduce using rule 7 (FieldMeth -> FieldDeclaration .)
    IDEN            reduce using rule 7 (FieldMeth -> FieldDeclaration .)
    RIGHTBRACE      reduce using rule 7 (FieldMeth -> FieldDeclaration .)


state 13

    (8) FieldMeth -> MethodDeclaration .

    PUBLIC          reduce using rule 8 (FieldMeth -> MethodDeclaration .)
    PRIVATE         reduce using rule 8 (FieldMeth -> MethodDeclaration .)
    STATIC          reduce using rule 8 (FieldMeth -> MethodDeclaration .)
    INT             reduce using rule 8 (FieldMeth -> MethodDeclaration .)
    BOOLEAN         reduce using rule 8 (FieldMeth -> MethodDeclaration .)
    VOID            reduce using rule 8 (FieldMeth -> MethodDeclaration .)
    IDEN            reduce using rule 8 (FieldMeth -> MethodDeclaration .)
    RIGHTBRACE      reduce using rule 8 (FieldMeth -> MethodDeclaration .)


state 14

    (9) FieldDeclaration -> Declarators . IDEN SEMICOLON
    (16) MethodDeclaration -> Declarators . IDEN LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE StatementList MethodReturn RIGHTBRACE

    IDEN            shift and go to state 20


state 15

    (10) Declarators -> Access . Static Type
    (14) Static -> . STATIC
    (15) Static -> . lambda
    (102) lambda -> .

  ! shift/reduce conflict for STATIC resolved as shift
    STATIC          shift and go to state 22
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    INT             reduce using rule 102 (lambda -> .)
    BOOLEAN         reduce using rule 102 (lambda -> .)
    VOID            reduce using rule 102 (lambda -> .)
    IDEN            reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    THIS            reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    COMMA           reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)

  ! STATIC          [ reduce using rule 102 (lambda -> .) ]

    Static                         shift and go to state 21
    lambda                         shift and go to state 23

state 16

    (11) Access -> PUBLIC .

    STATIC          reduce using rule 11 (Access -> PUBLIC .)
    INT             reduce using rule 11 (Access -> PUBLIC .)
    BOOLEAN         reduce using rule 11 (Access -> PUBLIC .)
    VOID            reduce using rule 11 (Access -> PUBLIC .)
    IDEN            reduce using rule 11 (Access -> PUBLIC .)


state 17

    (12) Access -> PRIVATE .

    STATIC          reduce using rule 12 (Access -> PRIVATE .)
    INT             reduce using rule 12 (Access -> PRIVATE .)
    BOOLEAN         reduce using rule 12 (Access -> PRIVATE .)
    VOID            reduce using rule 12 (Access -> PRIVATE .)
    IDEN            reduce using rule 12 (Access -> PRIVATE .)


state 18

    (4) ClassDeclaration -> CLASS IDEN LEFTBRACE FieldMethDecl RIGHTBRACE .

    CLASS           reduce using rule 4 (ClassDeclaration -> CLASS IDEN LEFTBRACE FieldMethDecl RIGHTBRACE .)
    $end            reduce using rule 4 (ClassDeclaration -> CLASS IDEN LEFTBRACE FieldMethDecl RIGHTBRACE .)


state 19

    (5) FieldMethDecl -> FieldMeth FieldMethDecl .

    RIGHTBRACE      reduce using rule 5 (FieldMethDecl -> FieldMeth FieldMethDecl .)


state 20

    (9) FieldDeclaration -> Declarators IDEN . SEMICOLON
    (16) MethodDeclaration -> Declarators IDEN . LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE StatementList MethodReturn RIGHTBRACE

    SEMICOLON       shift and go to state 24
    LEFTPARENT      shift and go to state 25


state 21

    (10) Declarators -> Access Static . Type
    (27) Type -> . PrimType
    (28) Type -> . ClassType
    (29) Type -> . ArrType
    (30) PrimType -> . INT
    (31) PrimType -> . BOOLEAN
    (32) PrimType -> . VOID
    (33) ClassType -> . IDEN
    (34) ArrType -> . ArrayType LEFTSQRBRACKET RIGHTSQRBRACKET
    (35) ArrayType -> . INT
    (36) ArrayType -> . ClassType

    INT             shift and go to state 30
    BOOLEAN         shift and go to state 31
    VOID            shift and go to state 32
    IDEN            shift and go to state 33

    Type                           shift and go to state 26
    PrimType                       shift and go to state 27
    ClassType                      shift and go to state 28
    ArrType                        shift and go to state 29
    ArrayType                      shift and go to state 34

state 22

    (14) Static -> STATIC .

    INT             reduce using rule 14 (Static -> STATIC .)
    BOOLEAN         reduce using rule 14 (Static -> STATIC .)
    VOID            reduce using rule 14 (Static -> STATIC .)
    IDEN            reduce using rule 14 (Static -> STATIC .)


state 23

    (15) Static -> lambda .

    INT             reduce using rule 15 (Static -> lambda .)
    BOOLEAN         reduce using rule 15 (Static -> lambda .)
    VOID            reduce using rule 15 (Static -> lambda .)
    IDEN            reduce using rule 15 (Static -> lambda .)


state 24

    (9) FieldDeclaration -> Declarators IDEN SEMICOLON .

    PUBLIC          reduce using rule 9 (FieldDeclaration -> Declarators IDEN SEMICOLON .)
    PRIVATE         reduce using rule 9 (FieldDeclaration -> Declarators IDEN SEMICOLON .)
    STATIC          reduce using rule 9 (FieldDeclaration -> Declarators IDEN SEMICOLON .)
    INT             reduce using rule 9 (FieldDeclaration -> Declarators IDEN SEMICOLON .)
    BOOLEAN         reduce using rule 9 (FieldDeclaration -> Declarators IDEN SEMICOLON .)
    VOID            reduce using rule 9 (FieldDeclaration -> Declarators IDEN SEMICOLON .)
    IDEN            reduce using rule 9 (FieldDeclaration -> Declarators IDEN SEMICOLON .)
    RIGHTBRACE      reduce using rule 9 (FieldDeclaration -> Declarators IDEN SEMICOLON .)


state 25

    (16) MethodDeclaration -> Declarators IDEN LEFTPARENT . ParameterList RIGHTPARENT LEFTBRACE StatementList MethodReturn RIGHTBRACE
    (17) ParameterList -> . Parameter
    (18) ParameterList -> . lambda
    (19) Parameter -> . Type IDEN CommaParameter
    (102) lambda -> .
    (27) Type -> . PrimType
    (28) Type -> . ClassType
    (29) Type -> . ArrType
    (30) PrimType -> . INT
    (31) PrimType -> . BOOLEAN
    (32) PrimType -> . VOID
    (33) ClassType -> . IDEN
    (34) ArrType -> . ArrayType LEFTSQRBRACKET RIGHTSQRBRACKET
    (35) ArrayType -> . INT
    (36) ArrayType -> . ClassType

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for IDEN resolved as shift
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    THIS            reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    COMMA           reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)
    INT             shift and go to state 30
    BOOLEAN         shift and go to state 31
    VOID            shift and go to state 32
    IDEN            shift and go to state 33

  ! INT             [ reduce using rule 102 (lambda -> .) ]
  ! BOOLEAN         [ reduce using rule 102 (lambda -> .) ]
  ! VOID            [ reduce using rule 102 (lambda -> .) ]
  ! IDEN            [ reduce using rule 102 (lambda -> .) ]

    ParameterList                  shift and go to state 35
    Parameter                      shift and go to state 36
    lambda                         shift and go to state 37
    Type                           shift and go to state 38
    PrimType                       shift and go to state 27
    ClassType                      shift and go to state 28
    ArrType                        shift and go to state 29
    ArrayType                      shift and go to state 34

state 26

    (10) Declarators -> Access Static Type .

    IDEN            reduce using rule 10 (Declarators -> Access Static Type .)


state 27

    (27) Type -> PrimType .

    IDEN            reduce using rule 27 (Type -> PrimType .)


state 28

    (28) Type -> ClassType .
    (36) ArrayType -> ClassType .

    IDEN            reduce using rule 28 (Type -> ClassType .)
    LEFTSQRBRACKET  reduce using rule 36 (ArrayType -> ClassType .)


state 29

    (29) Type -> ArrType .

    IDEN            reduce using rule 29 (Type -> ArrType .)


state 30

    (30) PrimType -> INT .
    (35) ArrayType -> INT .

    IDEN            reduce using rule 30 (PrimType -> INT .)
    LEFTSQRBRACKET  reduce using rule 35 (ArrayType -> INT .)


state 31

    (31) PrimType -> BOOLEAN .

    IDEN            reduce using rule 31 (PrimType -> BOOLEAN .)


state 32

    (32) PrimType -> VOID .

    IDEN            reduce using rule 32 (PrimType -> VOID .)


state 33

    (33) ClassType -> IDEN .

    IDEN            reduce using rule 33 (ClassType -> IDEN .)
    LEFTSQRBRACKET  reduce using rule 33 (ClassType -> IDEN .)


state 34

    (34) ArrType -> ArrayType . LEFTSQRBRACKET RIGHTSQRBRACKET

    LEFTSQRBRACKET  shift and go to state 39


state 35

    (16) MethodDeclaration -> Declarators IDEN LEFTPARENT ParameterList . RIGHTPARENT LEFTBRACE StatementList MethodReturn RIGHTBRACE

    RIGHTPARENT     shift and go to state 40


state 36

    (17) ParameterList -> Parameter .

    RIGHTPARENT     reduce using rule 17 (ParameterList -> Parameter .)


state 37

    (18) ParameterList -> lambda .

    RIGHTPARENT     reduce using rule 18 (ParameterList -> lambda .)


state 38

    (19) Parameter -> Type . IDEN CommaParameter

    IDEN            shift and go to state 41


state 39

    (34) ArrType -> ArrayType LEFTSQRBRACKET . RIGHTSQRBRACKET

    RIGHTSQRBRACKET shift and go to state 42


state 40

    (16) MethodDeclaration -> Declarators IDEN LEFTPARENT ParameterList RIGHTPARENT . LEFTBRACE StatementList MethodReturn RIGHTBRACE

    LEFTBRACE       shift and go to state 43


state 41

    (19) Parameter -> Type IDEN . CommaParameter
    (20) CommaParameter -> . CommaTypeId CommaParameter
    (21) CommaParameter -> . lambda
    (22) CommaTypeId -> . COMMA Type IDEN
    (102) lambda -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 47
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    INT             reduce using rule 102 (lambda -> .)
    BOOLEAN         reduce using rule 102 (lambda -> .)
    VOID            reduce using rule 102 (lambda -> .)
    IDEN            reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    THIS            reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)

  ! COMMA           [ reduce using rule 102 (lambda -> .) ]

    CommaParameter                 shift and go to state 44
    CommaTypeId                    shift and go to state 45
    lambda                         shift and go to state 46

state 42

    (34) ArrType -> ArrayType LEFTSQRBRACKET RIGHTSQRBRACKET .

    IDEN            reduce using rule 34 (ArrType -> ArrayType LEFTSQRBRACKET RIGHTSQRBRACKET .)


state 43

    (16) MethodDeclaration -> Declarators IDEN LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE . StatementList MethodReturn RIGHTBRACE
    (23) StatementList -> . Statement StatementList
    (24) StatementList -> . lambda
    (49) Statement -> . LeftBraceStatementRightBracet
    (50) Statement -> . TypeAssign
    (51) Statement -> . ReferenceAssign
    (52) Statement -> . ReferenceArgumantSemicolon
    (53) Statement -> . IfStatement
    (54) Statement -> . WhileStatement
    (102) lambda -> .
    (55) LeftBraceStatementRightBracet -> . LEFTBRACE StatementList RIGHTBRACE
    (56) TypeAssign -> . Type IDEN ASSIGNMENT Expression SEMICOLON
    (57) ReferenceAssign -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON
    (60) ReferenceArgumantSemicolon -> . ReferenceArgumant SEMICOLON
    (62) IfStatement -> . IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament
    (65) WhileStatement -> . WHILE LEFTPARENT Expression RIGHTPARENT Statement
    (27) Type -> . PrimType
    (28) Type -> . ClassType
    (29) Type -> . ArrType
    (43) Reference -> . ReferenceType DotIdList
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (30) PrimType -> . INT
    (31) PrimType -> . BOOLEAN
    (32) PrimType -> . VOID
    (33) ClassType -> . IDEN
    (34) ArrType -> . ArrayType LEFTSQRBRACKET RIGHTSQRBRACKET
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN
    (35) ArrayType -> . INT
    (36) ArrayType -> . ClassType

  ! shift/reduce conflict for LEFTBRACE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for IDEN resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    COMMA           reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)
    LEFTBRACE       shift and go to state 49
    IF              shift and go to state 62
    WHILE           shift and go to state 63
    INT             shift and go to state 30
    BOOLEAN         shift and go to state 31
    VOID            shift and go to state 32
    IDEN            shift and go to state 48
    THIS            shift and go to state 65

  ! INT             [ reduce using rule 102 (lambda -> .) ]
  ! BOOLEAN         [ reduce using rule 102 (lambda -> .) ]
  ! VOID            [ reduce using rule 102 (lambda -> .) ]
  ! IDEN            [ reduce using rule 102 (lambda -> .) ]
  ! LEFTBRACE       [ reduce using rule 102 (lambda -> .) ]
  ! IF              [ reduce using rule 102 (lambda -> .) ]
  ! WHILE           [ reduce using rule 102 (lambda -> .) ]
  ! THIS            [ reduce using rule 102 (lambda -> .) ]

    StatementList                  shift and go to state 50
    Statement                      shift and go to state 51
    lambda                         shift and go to state 52
    LeftBraceStatementRightBracet  shift and go to state 53
    TypeAssign                     shift and go to state 54
    ReferenceAssign                shift and go to state 55
    ReferenceArgumantSemicolon     shift and go to state 56
    IfStatement                    shift and go to state 57
    WhileStatement                 shift and go to state 58
    Type                           shift and go to state 59
    Reference                      shift and go to state 60
    ReferenceArgumant              shift and go to state 61
    PrimType                       shift and go to state 27
    ClassType                      shift and go to state 28
    ArrType                        shift and go to state 29
    ReferenceType                  shift and go to state 64
    ArrayType                      shift and go to state 34

state 44

    (19) Parameter -> Type IDEN CommaParameter .

    RIGHTPARENT     reduce using rule 19 (Parameter -> Type IDEN CommaParameter .)


state 45

    (20) CommaParameter -> CommaTypeId . CommaParameter
    (20) CommaParameter -> . CommaTypeId CommaParameter
    (21) CommaParameter -> . lambda
    (22) CommaTypeId -> . COMMA Type IDEN
    (102) lambda -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 47
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    INT             reduce using rule 102 (lambda -> .)
    BOOLEAN         reduce using rule 102 (lambda -> .)
    VOID            reduce using rule 102 (lambda -> .)
    IDEN            reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    THIS            reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)

  ! COMMA           [ reduce using rule 102 (lambda -> .) ]

    CommaTypeId                    shift and go to state 45
    CommaParameter                 shift and go to state 66
    lambda                         shift and go to state 46

state 46

    (21) CommaParameter -> lambda .

    RIGHTPARENT     reduce using rule 21 (CommaParameter -> lambda .)


state 47

    (22) CommaTypeId -> COMMA . Type IDEN
    (27) Type -> . PrimType
    (28) Type -> . ClassType
    (29) Type -> . ArrType
    (30) PrimType -> . INT
    (31) PrimType -> . BOOLEAN
    (32) PrimType -> . VOID
    (33) ClassType -> . IDEN
    (34) ArrType -> . ArrayType LEFTSQRBRACKET RIGHTSQRBRACKET
    (35) ArrayType -> . INT
    (36) ArrayType -> . ClassType

    INT             shift and go to state 30
    BOOLEAN         shift and go to state 31
    VOID            shift and go to state 32
    IDEN            shift and go to state 33

    Type                           shift and go to state 67
    PrimType                       shift and go to state 27
    ClassType                      shift and go to state 28
    ArrType                        shift and go to state 29
    ArrayType                      shift and go to state 34

state 48

    (33) ClassType -> IDEN .
    (45) ReferenceType -> IDEN .

  ! reduce/reduce conflict for LEFTSQRBRACKET resolved using rule 33 (ClassType -> IDEN .)
    IDEN            reduce using rule 33 (ClassType -> IDEN .)
    LEFTSQRBRACKET  reduce using rule 33 (ClassType -> IDEN .)
    DOT             reduce using rule 45 (ReferenceType -> IDEN .)
    ASSIGNMENT      reduce using rule 45 (ReferenceType -> IDEN .)
    LEFTPARENT      reduce using rule 45 (ReferenceType -> IDEN .)
    SEMICOLON       reduce using rule 45 (ReferenceType -> IDEN .)
    COMMA           reduce using rule 45 (ReferenceType -> IDEN .)
    RIGHTSQRBRACKET reduce using rule 45 (ReferenceType -> IDEN .)
    RIGHTPARENT     reduce using rule 45 (ReferenceType -> IDEN .)
    ADDITION        reduce using rule 45 (ReferenceType -> IDEN .)
    SUBSTRACTION    reduce using rule 45 (ReferenceType -> IDEN .)
    MULTIPLICATION  reduce using rule 45 (ReferenceType -> IDEN .)
    DIVISION        reduce using rule 45 (ReferenceType -> IDEN .)
    MODULO          reduce using rule 45 (ReferenceType -> IDEN .)
    AND             reduce using rule 45 (ReferenceType -> IDEN .)
    OR              reduce using rule 45 (ReferenceType -> IDEN .)
    CONCAT          reduce using rule 45 (ReferenceType -> IDEN .)
    LESS            reduce using rule 45 (ReferenceType -> IDEN .)
    LESSEQUAL       reduce using rule 45 (ReferenceType -> IDEN .)
    GREATER         reduce using rule 45 (ReferenceType -> IDEN .)
    GREATEREQUAL    reduce using rule 45 (ReferenceType -> IDEN .)
    EQUAL           reduce using rule 45 (ReferenceType -> IDEN .)
    NOTEQUAL        reduce using rule 45 (ReferenceType -> IDEN .)

  ! LEFTSQRBRACKET  [ reduce using rule 45 (ReferenceType -> IDEN .) ]


state 49

    (55) LeftBraceStatementRightBracet -> LEFTBRACE . StatementList RIGHTBRACE
    (23) StatementList -> . Statement StatementList
    (24) StatementList -> . lambda
    (49) Statement -> . LeftBraceStatementRightBracet
    (50) Statement -> . TypeAssign
    (51) Statement -> . ReferenceAssign
    (52) Statement -> . ReferenceArgumantSemicolon
    (53) Statement -> . IfStatement
    (54) Statement -> . WhileStatement
    (102) lambda -> .
    (55) LeftBraceStatementRightBracet -> . LEFTBRACE StatementList RIGHTBRACE
    (56) TypeAssign -> . Type IDEN ASSIGNMENT Expression SEMICOLON
    (57) ReferenceAssign -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON
    (60) ReferenceArgumantSemicolon -> . ReferenceArgumant SEMICOLON
    (62) IfStatement -> . IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament
    (65) WhileStatement -> . WHILE LEFTPARENT Expression RIGHTPARENT Statement
    (27) Type -> . PrimType
    (28) Type -> . ClassType
    (29) Type -> . ArrType
    (43) Reference -> . ReferenceType DotIdList
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (30) PrimType -> . INT
    (31) PrimType -> . BOOLEAN
    (32) PrimType -> . VOID
    (33) ClassType -> . IDEN
    (34) ArrType -> . ArrayType LEFTSQRBRACKET RIGHTSQRBRACKET
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN
    (35) ArrayType -> . INT
    (36) ArrayType -> . ClassType

  ! shift/reduce conflict for LEFTBRACE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for IDEN resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    COMMA           reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)
    LEFTBRACE       shift and go to state 49
    IF              shift and go to state 62
    WHILE           shift and go to state 63
    INT             shift and go to state 30
    BOOLEAN         shift and go to state 31
    VOID            shift and go to state 32
    IDEN            shift and go to state 48
    THIS            shift and go to state 65

  ! INT             [ reduce using rule 102 (lambda -> .) ]
  ! BOOLEAN         [ reduce using rule 102 (lambda -> .) ]
  ! VOID            [ reduce using rule 102 (lambda -> .) ]
  ! IDEN            [ reduce using rule 102 (lambda -> .) ]
  ! LEFTBRACE       [ reduce using rule 102 (lambda -> .) ]
  ! IF              [ reduce using rule 102 (lambda -> .) ]
  ! WHILE           [ reduce using rule 102 (lambda -> .) ]
  ! THIS            [ reduce using rule 102 (lambda -> .) ]

    StatementList                  shift and go to state 68
    Statement                      shift and go to state 51
    lambda                         shift and go to state 52
    LeftBraceStatementRightBracet  shift and go to state 53
    TypeAssign                     shift and go to state 54
    ReferenceAssign                shift and go to state 55
    ReferenceArgumantSemicolon     shift and go to state 56
    IfStatement                    shift and go to state 57
    WhileStatement                 shift and go to state 58
    Type                           shift and go to state 59
    Reference                      shift and go to state 60
    ReferenceArgumant              shift and go to state 61
    PrimType                       shift and go to state 27
    ClassType                      shift and go to state 28
    ArrType                        shift and go to state 29
    ReferenceType                  shift and go to state 64
    ArrayType                      shift and go to state 34

state 50

    (16) MethodDeclaration -> Declarators IDEN LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE StatementList . MethodReturn RIGHTBRACE
    (25) MethodReturn -> . RETURN Expression SEMICOLON
    (26) MethodReturn -> . lambda
    (102) lambda -> .

  ! shift/reduce conflict for RETURN resolved as shift
    RETURN          shift and go to state 70
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    INT             reduce using rule 102 (lambda -> .)
    BOOLEAN         reduce using rule 102 (lambda -> .)
    VOID            reduce using rule 102 (lambda -> .)
    IDEN            reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    THIS            reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    COMMA           reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)

  ! RETURN          [ reduce using rule 102 (lambda -> .) ]

    MethodReturn                   shift and go to state 69
    lambda                         shift and go to state 71

state 51

    (23) StatementList -> Statement . StatementList
    (23) StatementList -> . Statement StatementList
    (24) StatementList -> . lambda
    (49) Statement -> . LeftBraceStatementRightBracet
    (50) Statement -> . TypeAssign
    (51) Statement -> . ReferenceAssign
    (52) Statement -> . ReferenceArgumantSemicolon
    (53) Statement -> . IfStatement
    (54) Statement -> . WhileStatement
    (102) lambda -> .
    (55) LeftBraceStatementRightBracet -> . LEFTBRACE StatementList RIGHTBRACE
    (56) TypeAssign -> . Type IDEN ASSIGNMENT Expression SEMICOLON
    (57) ReferenceAssign -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON
    (60) ReferenceArgumantSemicolon -> . ReferenceArgumant SEMICOLON
    (62) IfStatement -> . IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament
    (65) WhileStatement -> . WHILE LEFTPARENT Expression RIGHTPARENT Statement
    (27) Type -> . PrimType
    (28) Type -> . ClassType
    (29) Type -> . ArrType
    (43) Reference -> . ReferenceType DotIdList
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (30) PrimType -> . INT
    (31) PrimType -> . BOOLEAN
    (32) PrimType -> . VOID
    (33) ClassType -> . IDEN
    (34) ArrType -> . ArrayType LEFTSQRBRACKET RIGHTSQRBRACKET
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN
    (35) ArrayType -> . INT
    (36) ArrayType -> . ClassType

  ! shift/reduce conflict for LEFTBRACE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for IDEN resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    COMMA           reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)
    LEFTBRACE       shift and go to state 49
    IF              shift and go to state 62
    WHILE           shift and go to state 63
    INT             shift and go to state 30
    BOOLEAN         shift and go to state 31
    VOID            shift and go to state 32
    IDEN            shift and go to state 48
    THIS            shift and go to state 65

  ! INT             [ reduce using rule 102 (lambda -> .) ]
  ! BOOLEAN         [ reduce using rule 102 (lambda -> .) ]
  ! VOID            [ reduce using rule 102 (lambda -> .) ]
  ! IDEN            [ reduce using rule 102 (lambda -> .) ]
  ! LEFTBRACE       [ reduce using rule 102 (lambda -> .) ]
  ! IF              [ reduce using rule 102 (lambda -> .) ]
  ! WHILE           [ reduce using rule 102 (lambda -> .) ]
  ! THIS            [ reduce using rule 102 (lambda -> .) ]

    Statement                      shift and go to state 51
    StatementList                  shift and go to state 72
    lambda                         shift and go to state 52
    LeftBraceStatementRightBracet  shift and go to state 53
    TypeAssign                     shift and go to state 54
    ReferenceAssign                shift and go to state 55
    ReferenceArgumantSemicolon     shift and go to state 56
    IfStatement                    shift and go to state 57
    WhileStatement                 shift and go to state 58
    Type                           shift and go to state 59
    Reference                      shift and go to state 60
    ReferenceArgumant              shift and go to state 61
    PrimType                       shift and go to state 27
    ClassType                      shift and go to state 28
    ArrType                        shift and go to state 29
    ReferenceType                  shift and go to state 64
    ArrayType                      shift and go to state 34

state 52

    (24) StatementList -> lambda .

    RETURN          reduce using rule 24 (StatementList -> lambda .)
    RIGHTBRACE      reduce using rule 24 (StatementList -> lambda .)


state 53

    (49) Statement -> LeftBraceStatementRightBracet .

    LEFTBRACE       reduce using rule 49 (Statement -> LeftBraceStatementRightBracet .)
    IF              reduce using rule 49 (Statement -> LeftBraceStatementRightBracet .)
    WHILE           reduce using rule 49 (Statement -> LeftBraceStatementRightBracet .)
    INT             reduce using rule 49 (Statement -> LeftBraceStatementRightBracet .)
    BOOLEAN         reduce using rule 49 (Statement -> LeftBraceStatementRightBracet .)
    VOID            reduce using rule 49 (Statement -> LeftBraceStatementRightBracet .)
    IDEN            reduce using rule 49 (Statement -> LeftBraceStatementRightBracet .)
    THIS            reduce using rule 49 (Statement -> LeftBraceStatementRightBracet .)
    RETURN          reduce using rule 49 (Statement -> LeftBraceStatementRightBracet .)
    RIGHTBRACE      reduce using rule 49 (Statement -> LeftBraceStatementRightBracet .)
    ELSE            reduce using rule 49 (Statement -> LeftBraceStatementRightBracet .)


state 54

    (50) Statement -> TypeAssign .

    LEFTBRACE       reduce using rule 50 (Statement -> TypeAssign .)
    IF              reduce using rule 50 (Statement -> TypeAssign .)
    WHILE           reduce using rule 50 (Statement -> TypeAssign .)
    INT             reduce using rule 50 (Statement -> TypeAssign .)
    BOOLEAN         reduce using rule 50 (Statement -> TypeAssign .)
    VOID            reduce using rule 50 (Statement -> TypeAssign .)
    IDEN            reduce using rule 50 (Statement -> TypeAssign .)
    THIS            reduce using rule 50 (Statement -> TypeAssign .)
    RETURN          reduce using rule 50 (Statement -> TypeAssign .)
    RIGHTBRACE      reduce using rule 50 (Statement -> TypeAssign .)
    ELSE            reduce using rule 50 (Statement -> TypeAssign .)


state 55

    (51) Statement -> ReferenceAssign .

    LEFTBRACE       reduce using rule 51 (Statement -> ReferenceAssign .)
    IF              reduce using rule 51 (Statement -> ReferenceAssign .)
    WHILE           reduce using rule 51 (Statement -> ReferenceAssign .)
    INT             reduce using rule 51 (Statement -> ReferenceAssign .)
    BOOLEAN         reduce using rule 51 (Statement -> ReferenceAssign .)
    VOID            reduce using rule 51 (Statement -> ReferenceAssign .)
    IDEN            reduce using rule 51 (Statement -> ReferenceAssign .)
    THIS            reduce using rule 51 (Statement -> ReferenceAssign .)
    RETURN          reduce using rule 51 (Statement -> ReferenceAssign .)
    RIGHTBRACE      reduce using rule 51 (Statement -> ReferenceAssign .)
    ELSE            reduce using rule 51 (Statement -> ReferenceAssign .)


state 56

    (52) Statement -> ReferenceArgumantSemicolon .

    LEFTBRACE       reduce using rule 52 (Statement -> ReferenceArgumantSemicolon .)
    IF              reduce using rule 52 (Statement -> ReferenceArgumantSemicolon .)
    WHILE           reduce using rule 52 (Statement -> ReferenceArgumantSemicolon .)
    INT             reduce using rule 52 (Statement -> ReferenceArgumantSemicolon .)
    BOOLEAN         reduce using rule 52 (Statement -> ReferenceArgumantSemicolon .)
    VOID            reduce using rule 52 (Statement -> ReferenceArgumantSemicolon .)
    IDEN            reduce using rule 52 (Statement -> ReferenceArgumantSemicolon .)
    THIS            reduce using rule 52 (Statement -> ReferenceArgumantSemicolon .)
    RETURN          reduce using rule 52 (Statement -> ReferenceArgumantSemicolon .)
    RIGHTBRACE      reduce using rule 52 (Statement -> ReferenceArgumantSemicolon .)
    ELSE            reduce using rule 52 (Statement -> ReferenceArgumantSemicolon .)


state 57

    (53) Statement -> IfStatement .

    LEFTBRACE       reduce using rule 53 (Statement -> IfStatement .)
    IF              reduce using rule 53 (Statement -> IfStatement .)
    WHILE           reduce using rule 53 (Statement -> IfStatement .)
    INT             reduce using rule 53 (Statement -> IfStatement .)
    BOOLEAN         reduce using rule 53 (Statement -> IfStatement .)
    VOID            reduce using rule 53 (Statement -> IfStatement .)
    IDEN            reduce using rule 53 (Statement -> IfStatement .)
    THIS            reduce using rule 53 (Statement -> IfStatement .)
    RETURN          reduce using rule 53 (Statement -> IfStatement .)
    RIGHTBRACE      reduce using rule 53 (Statement -> IfStatement .)
    ELSE            reduce using rule 53 (Statement -> IfStatement .)


state 58

    (54) Statement -> WhileStatement .

    LEFTBRACE       reduce using rule 54 (Statement -> WhileStatement .)
    IF              reduce using rule 54 (Statement -> WhileStatement .)
    WHILE           reduce using rule 54 (Statement -> WhileStatement .)
    INT             reduce using rule 54 (Statement -> WhileStatement .)
    BOOLEAN         reduce using rule 54 (Statement -> WhileStatement .)
    VOID            reduce using rule 54 (Statement -> WhileStatement .)
    IDEN            reduce using rule 54 (Statement -> WhileStatement .)
    THIS            reduce using rule 54 (Statement -> WhileStatement .)
    RETURN          reduce using rule 54 (Statement -> WhileStatement .)
    RIGHTBRACE      reduce using rule 54 (Statement -> WhileStatement .)
    ELSE            reduce using rule 54 (Statement -> WhileStatement .)


state 59

    (56) TypeAssign -> Type . IDEN ASSIGNMENT Expression SEMICOLON

    IDEN            shift and go to state 73


state 60

    (57) ReferenceAssign -> Reference . LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON
    (61) ReferenceArgumant -> Reference . LEFTPARENT ArgumentList RIGHTPARENT
    (58) LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> . LEFTSQRBRACKET Expression RIGHTSQRBRACKET
    (59) LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> . lambda
    (102) lambda -> .

  ! shift/reduce conflict for LEFTSQRBRACKET resolved as shift
  ! shift/reduce conflict for LEFTPARENT resolved as shift
    LEFTPARENT      shift and go to state 75
    LEFTSQRBRACKET  shift and go to state 76
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    INT             reduce using rule 102 (lambda -> .)
    BOOLEAN         reduce using rule 102 (lambda -> .)
    VOID            reduce using rule 102 (lambda -> .)
    IDEN            reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    THIS            reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    COMMA           reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)

  ! LEFTSQRBRACKET  [ reduce using rule 102 (lambda -> .) ]
  ! LEFTPARENT      [ reduce using rule 102 (lambda -> .) ]

    LEFTSQRBRACKETExpressionRIGHTSQRBRACKET shift and go to state 74
    lambda                         shift and go to state 77

state 61

    (60) ReferenceArgumantSemicolon -> ReferenceArgumant . SEMICOLON

    SEMICOLON       shift and go to state 78


state 62

    (62) IfStatement -> IF . LEFTPARENT Expression RIGHTPARENT Statement ElseStament

    LEFTPARENT      shift and go to state 79


state 63

    (65) WhileStatement -> WHILE . LEFTPARENT Expression RIGHTPARENT Statement

    LEFTPARENT      shift and go to state 80


state 64

    (43) Reference -> ReferenceType . DotIdList
    (46) DotIdList -> . DotId DotIdList
    (47) DotIdList -> . lambda
    (48) DotId -> . DOT IDEN
    (102) lambda -> .

    DOT             shift and go to state 84
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    INT             reduce using rule 102 (lambda -> .)
    BOOLEAN         reduce using rule 102 (lambda -> .)
    VOID            reduce using rule 102 (lambda -> .)
    IDEN            reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    THIS            reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    COMMA           reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)

    DotIdList                      shift and go to state 81
    DotId                          shift and go to state 82
    lambda                         shift and go to state 83

state 65

    (44) ReferenceType -> THIS .

    DOT             reduce using rule 44 (ReferenceType -> THIS .)
    LEFTSQRBRACKET  reduce using rule 44 (ReferenceType -> THIS .)
    ASSIGNMENT      reduce using rule 44 (ReferenceType -> THIS .)
    LEFTPARENT      reduce using rule 44 (ReferenceType -> THIS .)
    SEMICOLON       reduce using rule 44 (ReferenceType -> THIS .)
    COMMA           reduce using rule 44 (ReferenceType -> THIS .)
    RIGHTSQRBRACKET reduce using rule 44 (ReferenceType -> THIS .)
    RIGHTPARENT     reduce using rule 44 (ReferenceType -> THIS .)
    ADDITION        reduce using rule 44 (ReferenceType -> THIS .)
    SUBSTRACTION    reduce using rule 44 (ReferenceType -> THIS .)
    MULTIPLICATION  reduce using rule 44 (ReferenceType -> THIS .)
    DIVISION        reduce using rule 44 (ReferenceType -> THIS .)
    MODULO          reduce using rule 44 (ReferenceType -> THIS .)
    AND             reduce using rule 44 (ReferenceType -> THIS .)
    OR              reduce using rule 44 (ReferenceType -> THIS .)
    CONCAT          reduce using rule 44 (ReferenceType -> THIS .)
    LESS            reduce using rule 44 (ReferenceType -> THIS .)
    LESSEQUAL       reduce using rule 44 (ReferenceType -> THIS .)
    GREATER         reduce using rule 44 (ReferenceType -> THIS .)
    GREATEREQUAL    reduce using rule 44 (ReferenceType -> THIS .)
    EQUAL           reduce using rule 44 (ReferenceType -> THIS .)
    NOTEQUAL        reduce using rule 44 (ReferenceType -> THIS .)


state 66

    (20) CommaParameter -> CommaTypeId CommaParameter .

    RIGHTPARENT     reduce using rule 20 (CommaParameter -> CommaTypeId CommaParameter .)


state 67

    (22) CommaTypeId -> COMMA Type . IDEN

    IDEN            shift and go to state 85


state 68

    (55) LeftBraceStatementRightBracet -> LEFTBRACE StatementList . RIGHTBRACE

    RIGHTBRACE      shift and go to state 86


state 69

    (16) MethodDeclaration -> Declarators IDEN LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE StatementList MethodReturn . RIGHTBRACE

    RIGHTBRACE      shift and go to state 87


state 70

    (25) MethodReturn -> RETURN . Expression SEMICOLON
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 88
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 71

    (26) MethodReturn -> lambda .

    RIGHTBRACE      reduce using rule 26 (MethodReturn -> lambda .)


state 72

    (23) StatementList -> Statement StatementList .

    RETURN          reduce using rule 23 (StatementList -> Statement StatementList .)
    RIGHTBRACE      reduce using rule 23 (StatementList -> Statement StatementList .)


state 73

    (56) TypeAssign -> Type IDEN . ASSIGNMENT Expression SEMICOLON

    ASSIGNMENT      shift and go to state 106


state 74

    (57) ReferenceAssign -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET . ASSIGNMENT Expression SEMICOLON

    ASSIGNMENT      shift and go to state 107


state 75

    (61) ReferenceArgumant -> Reference LEFTPARENT . ArgumentList RIGHTPARENT
    (37) ArgumentList -> . Argument
    (38) ArgumentList -> . lambda
    (39) Argument -> . Expression CommaExpressionList
    (102) lambda -> .
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

  ! shift/reduce conflict for LEFTPARENT resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
  ! shift/reduce conflict for THIS resolved as shift
  ! shift/reduce conflict for IDEN resolved as shift
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    INT             reduce using rule 102 (lambda -> .)
    BOOLEAN         reduce using rule 102 (lambda -> .)
    VOID            reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    COMMA           reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)
    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

  ! IDEN            [ reduce using rule 102 (lambda -> .) ]
  ! THIS            [ reduce using rule 102 (lambda -> .) ]
  ! LEFTPARENT      [ reduce using rule 102 (lambda -> .) ]
  ! SUBSTRACTION    [ reduce using rule 102 (lambda -> .) ]

    Reference                      shift and go to state 98
    ArgumentList                   shift and go to state 108
    Argument                       shift and go to state 109
    lambda                         shift and go to state 110
    Expression                     shift and go to state 111
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 76

    (58) LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET . Expression RIGHTSQRBRACKET
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 112
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 77

    (59) LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .

    ASSIGNMENT      reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    SEMICOLON       reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    COMMA           reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    RIGHTSQRBRACKET reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    RIGHTPARENT     reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    ADDITION        reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    SUBSTRACTION    reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    MULTIPLICATION  reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    DIVISION        reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    MODULO          reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    AND             reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    OR              reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    CONCAT          reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    LESS            reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    LESSEQUAL       reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    GREATER         reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    GREATEREQUAL    reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    EQUAL           reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)
    NOTEQUAL        reduce using rule 59 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> lambda .)


state 78

    (60) ReferenceArgumantSemicolon -> ReferenceArgumant SEMICOLON .

    LEFTBRACE       reduce using rule 60 (ReferenceArgumantSemicolon -> ReferenceArgumant SEMICOLON .)
    IF              reduce using rule 60 (ReferenceArgumantSemicolon -> ReferenceArgumant SEMICOLON .)
    WHILE           reduce using rule 60 (ReferenceArgumantSemicolon -> ReferenceArgumant SEMICOLON .)
    INT             reduce using rule 60 (ReferenceArgumantSemicolon -> ReferenceArgumant SEMICOLON .)
    BOOLEAN         reduce using rule 60 (ReferenceArgumantSemicolon -> ReferenceArgumant SEMICOLON .)
    VOID            reduce using rule 60 (ReferenceArgumantSemicolon -> ReferenceArgumant SEMICOLON .)
    IDEN            reduce using rule 60 (ReferenceArgumantSemicolon -> ReferenceArgumant SEMICOLON .)
    THIS            reduce using rule 60 (ReferenceArgumantSemicolon -> ReferenceArgumant SEMICOLON .)
    RETURN          reduce using rule 60 (ReferenceArgumantSemicolon -> ReferenceArgumant SEMICOLON .)
    RIGHTBRACE      reduce using rule 60 (ReferenceArgumantSemicolon -> ReferenceArgumant SEMICOLON .)
    ELSE            reduce using rule 60 (ReferenceArgumantSemicolon -> ReferenceArgumant SEMICOLON .)


state 79

    (62) IfStatement -> IF LEFTPARENT . Expression RIGHTPARENT Statement ElseStament
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 113
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 80

    (65) WhileStatement -> WHILE LEFTPARENT . Expression RIGHTPARENT Statement
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 114
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 81

    (43) Reference -> ReferenceType DotIdList .

    LEFTSQRBRACKET  reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    ASSIGNMENT      reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    LEFTPARENT      reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    SEMICOLON       reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    COMMA           reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    RIGHTSQRBRACKET reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    RIGHTPARENT     reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    ADDITION        reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    SUBSTRACTION    reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    MULTIPLICATION  reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    DIVISION        reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    MODULO          reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    AND             reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    OR              reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    CONCAT          reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    LESS            reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    LESSEQUAL       reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    GREATER         reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    GREATEREQUAL    reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    EQUAL           reduce using rule 43 (Reference -> ReferenceType DotIdList .)
    NOTEQUAL        reduce using rule 43 (Reference -> ReferenceType DotIdList .)


state 82

    (46) DotIdList -> DotId . DotIdList
    (46) DotIdList -> . DotId DotIdList
    (47) DotIdList -> . lambda
    (48) DotId -> . DOT IDEN
    (102) lambda -> .

    DOT             shift and go to state 84
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    INT             reduce using rule 102 (lambda -> .)
    BOOLEAN         reduce using rule 102 (lambda -> .)
    VOID            reduce using rule 102 (lambda -> .)
    IDEN            reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    THIS            reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    COMMA           reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)

    DotId                          shift and go to state 82
    DotIdList                      shift and go to state 115
    lambda                         shift and go to state 83

state 83

    (47) DotIdList -> lambda .

    LEFTSQRBRACKET  reduce using rule 47 (DotIdList -> lambda .)
    ASSIGNMENT      reduce using rule 47 (DotIdList -> lambda .)
    LEFTPARENT      reduce using rule 47 (DotIdList -> lambda .)
    SEMICOLON       reduce using rule 47 (DotIdList -> lambda .)
    COMMA           reduce using rule 47 (DotIdList -> lambda .)
    RIGHTSQRBRACKET reduce using rule 47 (DotIdList -> lambda .)
    RIGHTPARENT     reduce using rule 47 (DotIdList -> lambda .)
    ADDITION        reduce using rule 47 (DotIdList -> lambda .)
    SUBSTRACTION    reduce using rule 47 (DotIdList -> lambda .)
    MULTIPLICATION  reduce using rule 47 (DotIdList -> lambda .)
    DIVISION        reduce using rule 47 (DotIdList -> lambda .)
    MODULO          reduce using rule 47 (DotIdList -> lambda .)
    AND             reduce using rule 47 (DotIdList -> lambda .)
    OR              reduce using rule 47 (DotIdList -> lambda .)
    CONCAT          reduce using rule 47 (DotIdList -> lambda .)
    LESS            reduce using rule 47 (DotIdList -> lambda .)
    LESSEQUAL       reduce using rule 47 (DotIdList -> lambda .)
    GREATER         reduce using rule 47 (DotIdList -> lambda .)
    GREATEREQUAL    reduce using rule 47 (DotIdList -> lambda .)
    EQUAL           reduce using rule 47 (DotIdList -> lambda .)
    NOTEQUAL        reduce using rule 47 (DotIdList -> lambda .)


state 84

    (48) DotId -> DOT . IDEN

    IDEN            shift and go to state 116


state 85

    (22) CommaTypeId -> COMMA Type IDEN .

    COMMA           reduce using rule 22 (CommaTypeId -> COMMA Type IDEN .)
    RIGHTPARENT     reduce using rule 22 (CommaTypeId -> COMMA Type IDEN .)


state 86

    (55) LeftBraceStatementRightBracet -> LEFTBRACE StatementList RIGHTBRACE .

    LEFTBRACE       reduce using rule 55 (LeftBraceStatementRightBracet -> LEFTBRACE StatementList RIGHTBRACE .)
    IF              reduce using rule 55 (LeftBraceStatementRightBracet -> LEFTBRACE StatementList RIGHTBRACE .)
    WHILE           reduce using rule 55 (LeftBraceStatementRightBracet -> LEFTBRACE StatementList RIGHTBRACE .)
    INT             reduce using rule 55 (LeftBraceStatementRightBracet -> LEFTBRACE StatementList RIGHTBRACE .)
    BOOLEAN         reduce using rule 55 (LeftBraceStatementRightBracet -> LEFTBRACE StatementList RIGHTBRACE .)
    VOID            reduce using rule 55 (LeftBraceStatementRightBracet -> LEFTBRACE StatementList RIGHTBRACE .)
    IDEN            reduce using rule 55 (LeftBraceStatementRightBracet -> LEFTBRACE StatementList RIGHTBRACE .)
    THIS            reduce using rule 55 (LeftBraceStatementRightBracet -> LEFTBRACE StatementList RIGHTBRACE .)
    RETURN          reduce using rule 55 (LeftBraceStatementRightBracet -> LEFTBRACE StatementList RIGHTBRACE .)
    RIGHTBRACE      reduce using rule 55 (LeftBraceStatementRightBracet -> LEFTBRACE StatementList RIGHTBRACE .)
    ELSE            reduce using rule 55 (LeftBraceStatementRightBracet -> LEFTBRACE StatementList RIGHTBRACE .)


state 87

    (16) MethodDeclaration -> Declarators IDEN LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE StatementList MethodReturn RIGHTBRACE .

    PUBLIC          reduce using rule 16 (MethodDeclaration -> Declarators IDEN LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE StatementList MethodReturn RIGHTBRACE .)
    PRIVATE         reduce using rule 16 (MethodDeclaration -> Declarators IDEN LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE StatementList MethodReturn RIGHTBRACE .)
    STATIC          reduce using rule 16 (MethodDeclaration -> Declarators IDEN LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE StatementList MethodReturn RIGHTBRACE .)
    INT             reduce using rule 16 (MethodDeclaration -> Declarators IDEN LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE StatementList MethodReturn RIGHTBRACE .)
    BOOLEAN         reduce using rule 16 (MethodDeclaration -> Declarators IDEN LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE StatementList MethodReturn RIGHTBRACE .)
    VOID            reduce using rule 16 (MethodDeclaration -> Declarators IDEN LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE StatementList MethodReturn RIGHTBRACE .)
    IDEN            reduce using rule 16 (MethodDeclaration -> Declarators IDEN LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE StatementList MethodReturn RIGHTBRACE .)
    RIGHTBRACE      reduce using rule 16 (MethodDeclaration -> Declarators IDEN LEFTPARENT ParameterList RIGHTPARENT LEFTBRACE StatementList MethodReturn RIGHTBRACE .)


state 88

    (25) MethodReturn -> RETURN Expression . SEMICOLON
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       shift and go to state 117
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    CONCAT          shift and go to state 125
    LESS            shift and go to state 126
    LESSEQUAL       shift and go to state 127
    GREATER         shift and go to state 128
    GREATEREQUAL    shift and go to state 129
    EQUAL           shift and go to state 130
    NOTEQUAL        shift and go to state 131


state 89

    (66) Expression -> ReferenceExpression .

    SEMICOLON       reduce using rule 66 (Expression -> ReferenceExpression .)
    COMMA           reduce using rule 66 (Expression -> ReferenceExpression .)
    RIGHTSQRBRACKET reduce using rule 66 (Expression -> ReferenceExpression .)
    RIGHTPARENT     reduce using rule 66 (Expression -> ReferenceExpression .)
    ADDITION        reduce using rule 66 (Expression -> ReferenceExpression .)
    SUBSTRACTION    reduce using rule 66 (Expression -> ReferenceExpression .)
    MULTIPLICATION  reduce using rule 66 (Expression -> ReferenceExpression .)
    DIVISION        reduce using rule 66 (Expression -> ReferenceExpression .)
    MODULO          reduce using rule 66 (Expression -> ReferenceExpression .)
    AND             reduce using rule 66 (Expression -> ReferenceExpression .)
    OR              reduce using rule 66 (Expression -> ReferenceExpression .)
    CONCAT          reduce using rule 66 (Expression -> ReferenceExpression .)
    LESS            reduce using rule 66 (Expression -> ReferenceExpression .)
    LESSEQUAL       reduce using rule 66 (Expression -> ReferenceExpression .)
    GREATER         reduce using rule 66 (Expression -> ReferenceExpression .)
    GREATEREQUAL    reduce using rule 66 (Expression -> ReferenceExpression .)
    EQUAL           reduce using rule 66 (Expression -> ReferenceExpression .)
    NOTEQUAL        reduce using rule 66 (Expression -> ReferenceExpression .)


state 90

    (67) Expression -> ReferenceArgumant .

    SEMICOLON       reduce using rule 67 (Expression -> ReferenceArgumant .)
    COMMA           reduce using rule 67 (Expression -> ReferenceArgumant .)
    RIGHTSQRBRACKET reduce using rule 67 (Expression -> ReferenceArgumant .)
    RIGHTPARENT     reduce using rule 67 (Expression -> ReferenceArgumant .)
    ADDITION        reduce using rule 67 (Expression -> ReferenceArgumant .)
    SUBSTRACTION    reduce using rule 67 (Expression -> ReferenceArgumant .)
    MULTIPLICATION  reduce using rule 67 (Expression -> ReferenceArgumant .)
    DIVISION        reduce using rule 67 (Expression -> ReferenceArgumant .)
    MODULO          reduce using rule 67 (Expression -> ReferenceArgumant .)
    AND             reduce using rule 67 (Expression -> ReferenceArgumant .)
    OR              reduce using rule 67 (Expression -> ReferenceArgumant .)
    CONCAT          reduce using rule 67 (Expression -> ReferenceArgumant .)
    LESS            reduce using rule 67 (Expression -> ReferenceArgumant .)
    LESSEQUAL       reduce using rule 67 (Expression -> ReferenceArgumant .)
    GREATER         reduce using rule 67 (Expression -> ReferenceArgumant .)
    GREATEREQUAL    reduce using rule 67 (Expression -> ReferenceArgumant .)
    EQUAL           reduce using rule 67 (Expression -> ReferenceArgumant .)
    NOTEQUAL        reduce using rule 67 (Expression -> ReferenceArgumant .)


state 91

    (68) Expression -> UnopExpression .

    SEMICOLON       reduce using rule 68 (Expression -> UnopExpression .)
    COMMA           reduce using rule 68 (Expression -> UnopExpression .)
    RIGHTSQRBRACKET reduce using rule 68 (Expression -> UnopExpression .)
    RIGHTPARENT     reduce using rule 68 (Expression -> UnopExpression .)
    ADDITION        reduce using rule 68 (Expression -> UnopExpression .)
    SUBSTRACTION    reduce using rule 68 (Expression -> UnopExpression .)
    MULTIPLICATION  reduce using rule 68 (Expression -> UnopExpression .)
    DIVISION        reduce using rule 68 (Expression -> UnopExpression .)
    MODULO          reduce using rule 68 (Expression -> UnopExpression .)
    AND             reduce using rule 68 (Expression -> UnopExpression .)
    OR              reduce using rule 68 (Expression -> UnopExpression .)
    CONCAT          reduce using rule 68 (Expression -> UnopExpression .)
    LESS            reduce using rule 68 (Expression -> UnopExpression .)
    LESSEQUAL       reduce using rule 68 (Expression -> UnopExpression .)
    GREATER         reduce using rule 68 (Expression -> UnopExpression .)
    GREATEREQUAL    reduce using rule 68 (Expression -> UnopExpression .)
    EQUAL           reduce using rule 68 (Expression -> UnopExpression .)
    NOTEQUAL        reduce using rule 68 (Expression -> UnopExpression .)


state 92

    (69) Expression -> LEFTPARENTExpressionRIGHTPARENT .

    SEMICOLON       reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    COMMA           reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    RIGHTSQRBRACKET reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    RIGHTPARENT     reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    ADDITION        reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    SUBSTRACTION    reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    MULTIPLICATION  reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    DIVISION        reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    MODULO          reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    AND             reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    OR              reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    CONCAT          reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    LESS            reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    LESSEQUAL       reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    GREATER         reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    GREATEREQUAL    reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    EQUAL           reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)
    NOTEQUAL        reduce using rule 69 (Expression -> LEFTPARENTExpressionRIGHTPARENT .)


state 93

    (70) Expression -> BinopExpression .

    SEMICOLON       reduce using rule 70 (Expression -> BinopExpression .)
    COMMA           reduce using rule 70 (Expression -> BinopExpression .)
    RIGHTSQRBRACKET reduce using rule 70 (Expression -> BinopExpression .)
    RIGHTPARENT     reduce using rule 70 (Expression -> BinopExpression .)
    ADDITION        reduce using rule 70 (Expression -> BinopExpression .)
    SUBSTRACTION    reduce using rule 70 (Expression -> BinopExpression .)
    MULTIPLICATION  reduce using rule 70 (Expression -> BinopExpression .)
    DIVISION        reduce using rule 70 (Expression -> BinopExpression .)
    MODULO          reduce using rule 70 (Expression -> BinopExpression .)
    AND             reduce using rule 70 (Expression -> BinopExpression .)
    OR              reduce using rule 70 (Expression -> BinopExpression .)
    CONCAT          reduce using rule 70 (Expression -> BinopExpression .)
    LESS            reduce using rule 70 (Expression -> BinopExpression .)
    LESSEQUAL       reduce using rule 70 (Expression -> BinopExpression .)
    GREATER         reduce using rule 70 (Expression -> BinopExpression .)
    GREATEREQUAL    reduce using rule 70 (Expression -> BinopExpression .)
    EQUAL           reduce using rule 70 (Expression -> BinopExpression .)
    NOTEQUAL        reduce using rule 70 (Expression -> BinopExpression .)


state 94

    (71) Expression -> NUMBER .

    SEMICOLON       reduce using rule 71 (Expression -> NUMBER .)
    COMMA           reduce using rule 71 (Expression -> NUMBER .)
    RIGHTSQRBRACKET reduce using rule 71 (Expression -> NUMBER .)
    RIGHTPARENT     reduce using rule 71 (Expression -> NUMBER .)
    ADDITION        reduce using rule 71 (Expression -> NUMBER .)
    SUBSTRACTION    reduce using rule 71 (Expression -> NUMBER .)
    MULTIPLICATION  reduce using rule 71 (Expression -> NUMBER .)
    DIVISION        reduce using rule 71 (Expression -> NUMBER .)
    MODULO          reduce using rule 71 (Expression -> NUMBER .)
    AND             reduce using rule 71 (Expression -> NUMBER .)
    OR              reduce using rule 71 (Expression -> NUMBER .)
    CONCAT          reduce using rule 71 (Expression -> NUMBER .)
    LESS            reduce using rule 71 (Expression -> NUMBER .)
    LESSEQUAL       reduce using rule 71 (Expression -> NUMBER .)
    GREATER         reduce using rule 71 (Expression -> NUMBER .)
    GREATEREQUAL    reduce using rule 71 (Expression -> NUMBER .)
    EQUAL           reduce using rule 71 (Expression -> NUMBER .)
    NOTEQUAL        reduce using rule 71 (Expression -> NUMBER .)


state 95

    (72) Expression -> TRUE .

    SEMICOLON       reduce using rule 72 (Expression -> TRUE .)
    COMMA           reduce using rule 72 (Expression -> TRUE .)
    RIGHTSQRBRACKET reduce using rule 72 (Expression -> TRUE .)
    RIGHTPARENT     reduce using rule 72 (Expression -> TRUE .)
    ADDITION        reduce using rule 72 (Expression -> TRUE .)
    SUBSTRACTION    reduce using rule 72 (Expression -> TRUE .)
    MULTIPLICATION  reduce using rule 72 (Expression -> TRUE .)
    DIVISION        reduce using rule 72 (Expression -> TRUE .)
    MODULO          reduce using rule 72 (Expression -> TRUE .)
    AND             reduce using rule 72 (Expression -> TRUE .)
    OR              reduce using rule 72 (Expression -> TRUE .)
    CONCAT          reduce using rule 72 (Expression -> TRUE .)
    LESS            reduce using rule 72 (Expression -> TRUE .)
    LESSEQUAL       reduce using rule 72 (Expression -> TRUE .)
    GREATER         reduce using rule 72 (Expression -> TRUE .)
    GREATEREQUAL    reduce using rule 72 (Expression -> TRUE .)
    EQUAL           reduce using rule 72 (Expression -> TRUE .)
    NOTEQUAL        reduce using rule 72 (Expression -> TRUE .)


state 96

    (73) Expression -> FALSE .

    SEMICOLON       reduce using rule 73 (Expression -> FALSE .)
    COMMA           reduce using rule 73 (Expression -> FALSE .)
    RIGHTSQRBRACKET reduce using rule 73 (Expression -> FALSE .)
    RIGHTPARENT     reduce using rule 73 (Expression -> FALSE .)
    ADDITION        reduce using rule 73 (Expression -> FALSE .)
    SUBSTRACTION    reduce using rule 73 (Expression -> FALSE .)
    MULTIPLICATION  reduce using rule 73 (Expression -> FALSE .)
    DIVISION        reduce using rule 73 (Expression -> FALSE .)
    MODULO          reduce using rule 73 (Expression -> FALSE .)
    AND             reduce using rule 73 (Expression -> FALSE .)
    OR              reduce using rule 73 (Expression -> FALSE .)
    CONCAT          reduce using rule 73 (Expression -> FALSE .)
    LESS            reduce using rule 73 (Expression -> FALSE .)
    LESSEQUAL       reduce using rule 73 (Expression -> FALSE .)
    GREATER         reduce using rule 73 (Expression -> FALSE .)
    GREATEREQUAL    reduce using rule 73 (Expression -> FALSE .)
    EQUAL           reduce using rule 73 (Expression -> FALSE .)
    NOTEQUAL        reduce using rule 73 (Expression -> FALSE .)


state 97

    (74) Expression -> NewInstance .

    SEMICOLON       reduce using rule 74 (Expression -> NewInstance .)
    COMMA           reduce using rule 74 (Expression -> NewInstance .)
    RIGHTSQRBRACKET reduce using rule 74 (Expression -> NewInstance .)
    RIGHTPARENT     reduce using rule 74 (Expression -> NewInstance .)
    ADDITION        reduce using rule 74 (Expression -> NewInstance .)
    SUBSTRACTION    reduce using rule 74 (Expression -> NewInstance .)
    MULTIPLICATION  reduce using rule 74 (Expression -> NewInstance .)
    DIVISION        reduce using rule 74 (Expression -> NewInstance .)
    MODULO          reduce using rule 74 (Expression -> NewInstance .)
    AND             reduce using rule 74 (Expression -> NewInstance .)
    OR              reduce using rule 74 (Expression -> NewInstance .)
    CONCAT          reduce using rule 74 (Expression -> NewInstance .)
    LESS            reduce using rule 74 (Expression -> NewInstance .)
    LESSEQUAL       reduce using rule 74 (Expression -> NewInstance .)
    GREATER         reduce using rule 74 (Expression -> NewInstance .)
    GREATEREQUAL    reduce using rule 74 (Expression -> NewInstance .)
    EQUAL           reduce using rule 74 (Expression -> NewInstance .)
    NOTEQUAL        reduce using rule 74 (Expression -> NewInstance .)


state 98

    (75) ReferenceExpression -> Reference . LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> Reference . LEFTPARENT ArgumentList RIGHTPARENT
    (58) LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> . LEFTSQRBRACKET Expression RIGHTSQRBRACKET
    (59) LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> . lambda
    (102) lambda -> .

  ! shift/reduce conflict for LEFTSQRBRACKET resolved as shift
  ! shift/reduce conflict for LEFTPARENT resolved as shift
    LEFTPARENT      shift and go to state 75
    LEFTSQRBRACKET  shift and go to state 76
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    INT             reduce using rule 102 (lambda -> .)
    BOOLEAN         reduce using rule 102 (lambda -> .)
    VOID            reduce using rule 102 (lambda -> .)
    IDEN            reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    THIS            reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    COMMA           reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)

  ! LEFTSQRBRACKET  [ reduce using rule 102 (lambda -> .) ]
  ! LEFTPARENT      [ reduce using rule 102 (lambda -> .) ]

    LEFTSQRBRACKETExpressionRIGHTSQRBRACKET shift and go to state 132
    lambda                         shift and go to state 77

state 99

    (80) LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT . Expression RIGHTPARENT
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 133
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 100

    (76) UnopExpression -> UnaryMinus .

    SEMICOLON       reduce using rule 76 (UnopExpression -> UnaryMinus .)
    COMMA           reduce using rule 76 (UnopExpression -> UnaryMinus .)
    RIGHTSQRBRACKET reduce using rule 76 (UnopExpression -> UnaryMinus .)
    RIGHTPARENT     reduce using rule 76 (UnopExpression -> UnaryMinus .)
    ADDITION        reduce using rule 76 (UnopExpression -> UnaryMinus .)
    SUBSTRACTION    reduce using rule 76 (UnopExpression -> UnaryMinus .)
    MULTIPLICATION  reduce using rule 76 (UnopExpression -> UnaryMinus .)
    DIVISION        reduce using rule 76 (UnopExpression -> UnaryMinus .)
    MODULO          reduce using rule 76 (UnopExpression -> UnaryMinus .)
    AND             reduce using rule 76 (UnopExpression -> UnaryMinus .)
    OR              reduce using rule 76 (UnopExpression -> UnaryMinus .)
    CONCAT          reduce using rule 76 (UnopExpression -> UnaryMinus .)
    LESS            reduce using rule 76 (UnopExpression -> UnaryMinus .)
    LESSEQUAL       reduce using rule 76 (UnopExpression -> UnaryMinus .)
    GREATER         reduce using rule 76 (UnopExpression -> UnaryMinus .)
    GREATEREQUAL    reduce using rule 76 (UnopExpression -> UnaryMinus .)
    EQUAL           reduce using rule 76 (UnopExpression -> UnaryMinus .)
    NOTEQUAL        reduce using rule 76 (UnopExpression -> UnaryMinus .)


state 101

    (77) UnopExpression -> UnaryNot .

    SEMICOLON       reduce using rule 77 (UnopExpression -> UnaryNot .)
    COMMA           reduce using rule 77 (UnopExpression -> UnaryNot .)
    RIGHTSQRBRACKET reduce using rule 77 (UnopExpression -> UnaryNot .)
    RIGHTPARENT     reduce using rule 77 (UnopExpression -> UnaryNot .)
    ADDITION        reduce using rule 77 (UnopExpression -> UnaryNot .)
    SUBSTRACTION    reduce using rule 77 (UnopExpression -> UnaryNot .)
    MULTIPLICATION  reduce using rule 77 (UnopExpression -> UnaryNot .)
    DIVISION        reduce using rule 77 (UnopExpression -> UnaryNot .)
    MODULO          reduce using rule 77 (UnopExpression -> UnaryNot .)
    AND             reduce using rule 77 (UnopExpression -> UnaryNot .)
    OR              reduce using rule 77 (UnopExpression -> UnaryNot .)
    CONCAT          reduce using rule 77 (UnopExpression -> UnaryNot .)
    LESS            reduce using rule 77 (UnopExpression -> UnaryNot .)
    LESSEQUAL       reduce using rule 77 (UnopExpression -> UnaryNot .)
    GREATER         reduce using rule 77 (UnopExpression -> UnaryNot .)
    GREATEREQUAL    reduce using rule 77 (UnopExpression -> UnaryNot .)
    EQUAL           reduce using rule 77 (UnopExpression -> UnaryNot .)
    NOTEQUAL        reduce using rule 77 (UnopExpression -> UnaryNot .)


state 102

    (79) UnaryMinus -> SUBSTRACTION . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 134
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 103

    (95) NewInstance -> NEW . NewObject
    (96) NewObject -> . NewClass
    (97) NewObject -> . NewIntArray
    (98) NewObject -> . NewIdArray
    (99) NewClass -> . IDEN LEFTPARENT RIGHTPARENT
    (100) NewIntArray -> . INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET
    (101) NewIdArray -> . IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET

    IDEN            shift and go to state 139
    INT             shift and go to state 140

    NewObject                      shift and go to state 135
    NewClass                       shift and go to state 136
    NewIntArray                    shift and go to state 137
    NewIdArray                     shift and go to state 138

state 104

    (78) UnaryNot -> NOT . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 141
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 105

    (45) ReferenceType -> IDEN .

    DOT             reduce using rule 45 (ReferenceType -> IDEN .)
    LEFTSQRBRACKET  reduce using rule 45 (ReferenceType -> IDEN .)
    ASSIGNMENT      reduce using rule 45 (ReferenceType -> IDEN .)
    LEFTPARENT      reduce using rule 45 (ReferenceType -> IDEN .)
    SEMICOLON       reduce using rule 45 (ReferenceType -> IDEN .)
    COMMA           reduce using rule 45 (ReferenceType -> IDEN .)
    RIGHTSQRBRACKET reduce using rule 45 (ReferenceType -> IDEN .)
    RIGHTPARENT     reduce using rule 45 (ReferenceType -> IDEN .)
    ADDITION        reduce using rule 45 (ReferenceType -> IDEN .)
    SUBSTRACTION    reduce using rule 45 (ReferenceType -> IDEN .)
    MULTIPLICATION  reduce using rule 45 (ReferenceType -> IDEN .)
    DIVISION        reduce using rule 45 (ReferenceType -> IDEN .)
    MODULO          reduce using rule 45 (ReferenceType -> IDEN .)
    AND             reduce using rule 45 (ReferenceType -> IDEN .)
    OR              reduce using rule 45 (ReferenceType -> IDEN .)
    CONCAT          reduce using rule 45 (ReferenceType -> IDEN .)
    LESS            reduce using rule 45 (ReferenceType -> IDEN .)
    LESSEQUAL       reduce using rule 45 (ReferenceType -> IDEN .)
    GREATER         reduce using rule 45 (ReferenceType -> IDEN .)
    GREATEREQUAL    reduce using rule 45 (ReferenceType -> IDEN .)
    EQUAL           reduce using rule 45 (ReferenceType -> IDEN .)
    NOTEQUAL        reduce using rule 45 (ReferenceType -> IDEN .)


state 106

    (56) TypeAssign -> Type IDEN ASSIGNMENT . Expression SEMICOLON
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 142
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 107

    (57) ReferenceAssign -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT . Expression SEMICOLON
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Reference                      shift and go to state 98
    Expression                     shift and go to state 143
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 108

    (61) ReferenceArgumant -> Reference LEFTPARENT ArgumentList . RIGHTPARENT

    RIGHTPARENT     shift and go to state 144


state 109

    (37) ArgumentList -> Argument .

    RIGHTPARENT     reduce using rule 37 (ArgumentList -> Argument .)


state 110

    (38) ArgumentList -> lambda .

    RIGHTPARENT     reduce using rule 38 (ArgumentList -> lambda .)


state 111

    (39) Argument -> Expression . CommaExpressionList
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression
    (40) CommaExpressionList -> . CommaExpression CommaExpressionList
    (41) CommaExpressionList -> . lambda
    (42) CommaExpression -> . COMMA Expression
    (102) lambda -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for ADDITION resolved as shift
  ! shift/reduce conflict for SUBSTRACTION resolved as shift
  ! shift/reduce conflict for MULTIPLICATION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for CONCAT resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    CONCAT          shift and go to state 125
    LESS            shift and go to state 126
    LESSEQUAL       shift and go to state 127
    GREATER         shift and go to state 128
    GREATEREQUAL    shift and go to state 129
    EQUAL           shift and go to state 130
    NOTEQUAL        shift and go to state 131
    COMMA           shift and go to state 148
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    INT             reduce using rule 102 (lambda -> .)
    BOOLEAN         reduce using rule 102 (lambda -> .)
    VOID            reduce using rule 102 (lambda -> .)
    IDEN            reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    THIS            reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)

  ! COMMA           [ reduce using rule 102 (lambda -> .) ]
  ! ADDITION        [ reduce using rule 102 (lambda -> .) ]
  ! SUBSTRACTION    [ reduce using rule 102 (lambda -> .) ]
  ! MULTIPLICATION  [ reduce using rule 102 (lambda -> .) ]
  ! DIVISION        [ reduce using rule 102 (lambda -> .) ]
  ! MODULO          [ reduce using rule 102 (lambda -> .) ]
  ! AND             [ reduce using rule 102 (lambda -> .) ]
  ! OR              [ reduce using rule 102 (lambda -> .) ]
  ! CONCAT          [ reduce using rule 102 (lambda -> .) ]
  ! LESS            [ reduce using rule 102 (lambda -> .) ]
  ! LESSEQUAL       [ reduce using rule 102 (lambda -> .) ]
  ! GREATER         [ reduce using rule 102 (lambda -> .) ]
  ! GREATEREQUAL    [ reduce using rule 102 (lambda -> .) ]
  ! EQUAL           [ reduce using rule 102 (lambda -> .) ]
  ! NOTEQUAL        [ reduce using rule 102 (lambda -> .) ]

    CommaExpressionList            shift and go to state 145
    CommaExpression                shift and go to state 146
    lambda                         shift and go to state 147

state 112

    (58) LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression . RIGHTSQRBRACKET
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    RIGHTSQRBRACKET shift and go to state 149
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    CONCAT          shift and go to state 125
    LESS            shift and go to state 126
    LESSEQUAL       shift and go to state 127
    GREATER         shift and go to state 128
    GREATEREQUAL    shift and go to state 129
    EQUAL           shift and go to state 130
    NOTEQUAL        shift and go to state 131


state 113

    (62) IfStatement -> IF LEFTPARENT Expression . RIGHTPARENT Statement ElseStament
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    RIGHTPARENT     shift and go to state 150
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    CONCAT          shift and go to state 125
    LESS            shift and go to state 126
    LESSEQUAL       shift and go to state 127
    GREATER         shift and go to state 128
    GREATEREQUAL    shift and go to state 129
    EQUAL           shift and go to state 130
    NOTEQUAL        shift and go to state 131


state 114

    (65) WhileStatement -> WHILE LEFTPARENT Expression . RIGHTPARENT Statement
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    RIGHTPARENT     shift and go to state 151
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    CONCAT          shift and go to state 125
    LESS            shift and go to state 126
    LESSEQUAL       shift and go to state 127
    GREATER         shift and go to state 128
    GREATEREQUAL    shift and go to state 129
    EQUAL           shift and go to state 130
    NOTEQUAL        shift and go to state 131


state 115

    (46) DotIdList -> DotId DotIdList .

    LEFTSQRBRACKET  reduce using rule 46 (DotIdList -> DotId DotIdList .)
    ASSIGNMENT      reduce using rule 46 (DotIdList -> DotId DotIdList .)
    LEFTPARENT      reduce using rule 46 (DotIdList -> DotId DotIdList .)
    SEMICOLON       reduce using rule 46 (DotIdList -> DotId DotIdList .)
    COMMA           reduce using rule 46 (DotIdList -> DotId DotIdList .)
    RIGHTSQRBRACKET reduce using rule 46 (DotIdList -> DotId DotIdList .)
    RIGHTPARENT     reduce using rule 46 (DotIdList -> DotId DotIdList .)
    ADDITION        reduce using rule 46 (DotIdList -> DotId DotIdList .)
    SUBSTRACTION    reduce using rule 46 (DotIdList -> DotId DotIdList .)
    MULTIPLICATION  reduce using rule 46 (DotIdList -> DotId DotIdList .)
    DIVISION        reduce using rule 46 (DotIdList -> DotId DotIdList .)
    MODULO          reduce using rule 46 (DotIdList -> DotId DotIdList .)
    AND             reduce using rule 46 (DotIdList -> DotId DotIdList .)
    OR              reduce using rule 46 (DotIdList -> DotId DotIdList .)
    CONCAT          reduce using rule 46 (DotIdList -> DotId DotIdList .)
    LESS            reduce using rule 46 (DotIdList -> DotId DotIdList .)
    LESSEQUAL       reduce using rule 46 (DotIdList -> DotId DotIdList .)
    GREATER         reduce using rule 46 (DotIdList -> DotId DotIdList .)
    GREATEREQUAL    reduce using rule 46 (DotIdList -> DotId DotIdList .)
    EQUAL           reduce using rule 46 (DotIdList -> DotId DotIdList .)
    NOTEQUAL        reduce using rule 46 (DotIdList -> DotId DotIdList .)


state 116

    (48) DotId -> DOT IDEN .

    DOT             reduce using rule 48 (DotId -> DOT IDEN .)
    LEFTSQRBRACKET  reduce using rule 48 (DotId -> DOT IDEN .)
    ASSIGNMENT      reduce using rule 48 (DotId -> DOT IDEN .)
    LEFTPARENT      reduce using rule 48 (DotId -> DOT IDEN .)
    SEMICOLON       reduce using rule 48 (DotId -> DOT IDEN .)
    COMMA           reduce using rule 48 (DotId -> DOT IDEN .)
    RIGHTSQRBRACKET reduce using rule 48 (DotId -> DOT IDEN .)
    RIGHTPARENT     reduce using rule 48 (DotId -> DOT IDEN .)
    ADDITION        reduce using rule 48 (DotId -> DOT IDEN .)
    SUBSTRACTION    reduce using rule 48 (DotId -> DOT IDEN .)
    MULTIPLICATION  reduce using rule 48 (DotId -> DOT IDEN .)
    DIVISION        reduce using rule 48 (DotId -> DOT IDEN .)
    MODULO          reduce using rule 48 (DotId -> DOT IDEN .)
    AND             reduce using rule 48 (DotId -> DOT IDEN .)
    OR              reduce using rule 48 (DotId -> DOT IDEN .)
    CONCAT          reduce using rule 48 (DotId -> DOT IDEN .)
    LESS            reduce using rule 48 (DotId -> DOT IDEN .)
    LESSEQUAL       reduce using rule 48 (DotId -> DOT IDEN .)
    GREATER         reduce using rule 48 (DotId -> DOT IDEN .)
    GREATEREQUAL    reduce using rule 48 (DotId -> DOT IDEN .)
    EQUAL           reduce using rule 48 (DotId -> DOT IDEN .)
    NOTEQUAL        reduce using rule 48 (DotId -> DOT IDEN .)


state 117

    (25) MethodReturn -> RETURN Expression SEMICOLON .

    RIGHTBRACE      reduce using rule 25 (MethodReturn -> RETURN Expression SEMICOLON .)


state 118

    (81) BinopExpression -> Expression ADDITION . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 152
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 119

    (82) BinopExpression -> Expression SUBSTRACTION . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 153
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 120

    (83) BinopExpression -> Expression MULTIPLICATION . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 154
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 121

    (84) BinopExpression -> Expression DIVISION . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 155
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 122

    (85) BinopExpression -> Expression MODULO . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 156
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 123

    (86) BinopExpression -> Expression AND . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 157
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 124

    (87) BinopExpression -> Expression OR . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 158
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 125

    (88) BinopExpression -> Expression CONCAT . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 159
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 126

    (89) BinopExpression -> Expression LESS . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 160
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 127

    (90) BinopExpression -> Expression LESSEQUAL . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 161
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 128

    (91) BinopExpression -> Expression GREATER . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 162
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 129

    (92) BinopExpression -> Expression GREATEREQUAL . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 163
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 130

    (93) BinopExpression -> Expression EQUAL . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 164
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 131

    (94) BinopExpression -> Expression NOTEQUAL . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 165
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 132

    (75) ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .

    SEMICOLON       reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    COMMA           reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    RIGHTSQRBRACKET reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    RIGHTPARENT     reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    ADDITION        reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    SUBSTRACTION    reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    MULTIPLICATION  reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    DIVISION        reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    MODULO          reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    AND             reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    OR              reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    CONCAT          reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    LESS            reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    LESSEQUAL       reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    GREATER         reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    GREATEREQUAL    reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    EQUAL           reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)
    NOTEQUAL        reduce using rule 75 (ReferenceExpression -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET .)


state 133

    (80) LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression . RIGHTPARENT
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    RIGHTPARENT     shift and go to state 166
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    CONCAT          shift and go to state 125
    LESS            shift and go to state 126
    LESSEQUAL       shift and go to state 127
    GREATER         shift and go to state 128
    GREATEREQUAL    shift and go to state 129
    EQUAL           shift and go to state 130
    NOTEQUAL        shift and go to state 131


state 134

    (79) UnaryMinus -> SUBSTRACTION Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    COMMA           reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    RIGHTSQRBRACKET reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    RIGHTPARENT     reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    ADDITION        reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    SUBSTRACTION    reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    MULTIPLICATION  reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    DIVISION        reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    MODULO          reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    AND             reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    OR              reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    CONCAT          reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    LESS            reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    LESSEQUAL       reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    GREATER         reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    GREATEREQUAL    reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    EQUAL           reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)
    NOTEQUAL        reduce using rule 79 (UnaryMinus -> SUBSTRACTION Expression .)

  ! ADDITION        [ shift and go to state 118 ]
  ! SUBSTRACTION    [ shift and go to state 119 ]
  ! MULTIPLICATION  [ shift and go to state 120 ]
  ! DIVISION        [ shift and go to state 121 ]
  ! MODULO          [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! CONCAT          [ shift and go to state 125 ]
  ! LESS            [ shift and go to state 126 ]
  ! LESSEQUAL       [ shift and go to state 127 ]
  ! GREATER         [ shift and go to state 128 ]
  ! GREATEREQUAL    [ shift and go to state 129 ]
  ! EQUAL           [ shift and go to state 130 ]
  ! NOTEQUAL        [ shift and go to state 131 ]


state 135

    (95) NewInstance -> NEW NewObject .

    SEMICOLON       reduce using rule 95 (NewInstance -> NEW NewObject .)
    COMMA           reduce using rule 95 (NewInstance -> NEW NewObject .)
    RIGHTSQRBRACKET reduce using rule 95 (NewInstance -> NEW NewObject .)
    RIGHTPARENT     reduce using rule 95 (NewInstance -> NEW NewObject .)
    ADDITION        reduce using rule 95 (NewInstance -> NEW NewObject .)
    SUBSTRACTION    reduce using rule 95 (NewInstance -> NEW NewObject .)
    MULTIPLICATION  reduce using rule 95 (NewInstance -> NEW NewObject .)
    DIVISION        reduce using rule 95 (NewInstance -> NEW NewObject .)
    MODULO          reduce using rule 95 (NewInstance -> NEW NewObject .)
    AND             reduce using rule 95 (NewInstance -> NEW NewObject .)
    OR              reduce using rule 95 (NewInstance -> NEW NewObject .)
    CONCAT          reduce using rule 95 (NewInstance -> NEW NewObject .)
    LESS            reduce using rule 95 (NewInstance -> NEW NewObject .)
    LESSEQUAL       reduce using rule 95 (NewInstance -> NEW NewObject .)
    GREATER         reduce using rule 95 (NewInstance -> NEW NewObject .)
    GREATEREQUAL    reduce using rule 95 (NewInstance -> NEW NewObject .)
    EQUAL           reduce using rule 95 (NewInstance -> NEW NewObject .)
    NOTEQUAL        reduce using rule 95 (NewInstance -> NEW NewObject .)


state 136

    (96) NewObject -> NewClass .

    SEMICOLON       reduce using rule 96 (NewObject -> NewClass .)
    COMMA           reduce using rule 96 (NewObject -> NewClass .)
    RIGHTSQRBRACKET reduce using rule 96 (NewObject -> NewClass .)
    RIGHTPARENT     reduce using rule 96 (NewObject -> NewClass .)
    ADDITION        reduce using rule 96 (NewObject -> NewClass .)
    SUBSTRACTION    reduce using rule 96 (NewObject -> NewClass .)
    MULTIPLICATION  reduce using rule 96 (NewObject -> NewClass .)
    DIVISION        reduce using rule 96 (NewObject -> NewClass .)
    MODULO          reduce using rule 96 (NewObject -> NewClass .)
    AND             reduce using rule 96 (NewObject -> NewClass .)
    OR              reduce using rule 96 (NewObject -> NewClass .)
    CONCAT          reduce using rule 96 (NewObject -> NewClass .)
    LESS            reduce using rule 96 (NewObject -> NewClass .)
    LESSEQUAL       reduce using rule 96 (NewObject -> NewClass .)
    GREATER         reduce using rule 96 (NewObject -> NewClass .)
    GREATEREQUAL    reduce using rule 96 (NewObject -> NewClass .)
    EQUAL           reduce using rule 96 (NewObject -> NewClass .)
    NOTEQUAL        reduce using rule 96 (NewObject -> NewClass .)


state 137

    (97) NewObject -> NewIntArray .

    SEMICOLON       reduce using rule 97 (NewObject -> NewIntArray .)
    COMMA           reduce using rule 97 (NewObject -> NewIntArray .)
    RIGHTSQRBRACKET reduce using rule 97 (NewObject -> NewIntArray .)
    RIGHTPARENT     reduce using rule 97 (NewObject -> NewIntArray .)
    ADDITION        reduce using rule 97 (NewObject -> NewIntArray .)
    SUBSTRACTION    reduce using rule 97 (NewObject -> NewIntArray .)
    MULTIPLICATION  reduce using rule 97 (NewObject -> NewIntArray .)
    DIVISION        reduce using rule 97 (NewObject -> NewIntArray .)
    MODULO          reduce using rule 97 (NewObject -> NewIntArray .)
    AND             reduce using rule 97 (NewObject -> NewIntArray .)
    OR              reduce using rule 97 (NewObject -> NewIntArray .)
    CONCAT          reduce using rule 97 (NewObject -> NewIntArray .)
    LESS            reduce using rule 97 (NewObject -> NewIntArray .)
    LESSEQUAL       reduce using rule 97 (NewObject -> NewIntArray .)
    GREATER         reduce using rule 97 (NewObject -> NewIntArray .)
    GREATEREQUAL    reduce using rule 97 (NewObject -> NewIntArray .)
    EQUAL           reduce using rule 97 (NewObject -> NewIntArray .)
    NOTEQUAL        reduce using rule 97 (NewObject -> NewIntArray .)


state 138

    (98) NewObject -> NewIdArray .

    SEMICOLON       reduce using rule 98 (NewObject -> NewIdArray .)
    COMMA           reduce using rule 98 (NewObject -> NewIdArray .)
    RIGHTSQRBRACKET reduce using rule 98 (NewObject -> NewIdArray .)
    RIGHTPARENT     reduce using rule 98 (NewObject -> NewIdArray .)
    ADDITION        reduce using rule 98 (NewObject -> NewIdArray .)
    SUBSTRACTION    reduce using rule 98 (NewObject -> NewIdArray .)
    MULTIPLICATION  reduce using rule 98 (NewObject -> NewIdArray .)
    DIVISION        reduce using rule 98 (NewObject -> NewIdArray .)
    MODULO          reduce using rule 98 (NewObject -> NewIdArray .)
    AND             reduce using rule 98 (NewObject -> NewIdArray .)
    OR              reduce using rule 98 (NewObject -> NewIdArray .)
    CONCAT          reduce using rule 98 (NewObject -> NewIdArray .)
    LESS            reduce using rule 98 (NewObject -> NewIdArray .)
    LESSEQUAL       reduce using rule 98 (NewObject -> NewIdArray .)
    GREATER         reduce using rule 98 (NewObject -> NewIdArray .)
    GREATEREQUAL    reduce using rule 98 (NewObject -> NewIdArray .)
    EQUAL           reduce using rule 98 (NewObject -> NewIdArray .)
    NOTEQUAL        reduce using rule 98 (NewObject -> NewIdArray .)


state 139

    (99) NewClass -> IDEN . LEFTPARENT RIGHTPARENT
    (101) NewIdArray -> IDEN . LEFTSQRBRACKET Expression RIGHTSQRBRACKET

    LEFTPARENT      shift and go to state 167
    LEFTSQRBRACKET  shift and go to state 168


state 140

    (100) NewIntArray -> INT . LEFTSQRBRACKET Expression RIGHTSQRBRACKET

    LEFTSQRBRACKET  shift and go to state 169


state 141

    (78) UnaryNot -> NOT Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       reduce using rule 78 (UnaryNot -> NOT Expression .)
    COMMA           reduce using rule 78 (UnaryNot -> NOT Expression .)
    RIGHTSQRBRACKET reduce using rule 78 (UnaryNot -> NOT Expression .)
    RIGHTPARENT     reduce using rule 78 (UnaryNot -> NOT Expression .)
    ADDITION        reduce using rule 78 (UnaryNot -> NOT Expression .)
    SUBSTRACTION    reduce using rule 78 (UnaryNot -> NOT Expression .)
    MULTIPLICATION  reduce using rule 78 (UnaryNot -> NOT Expression .)
    DIVISION        reduce using rule 78 (UnaryNot -> NOT Expression .)
    MODULO          reduce using rule 78 (UnaryNot -> NOT Expression .)
    AND             reduce using rule 78 (UnaryNot -> NOT Expression .)
    OR              reduce using rule 78 (UnaryNot -> NOT Expression .)
    CONCAT          reduce using rule 78 (UnaryNot -> NOT Expression .)
    LESS            reduce using rule 78 (UnaryNot -> NOT Expression .)
    LESSEQUAL       reduce using rule 78 (UnaryNot -> NOT Expression .)
    GREATER         reduce using rule 78 (UnaryNot -> NOT Expression .)
    GREATEREQUAL    reduce using rule 78 (UnaryNot -> NOT Expression .)
    EQUAL           reduce using rule 78 (UnaryNot -> NOT Expression .)
    NOTEQUAL        reduce using rule 78 (UnaryNot -> NOT Expression .)

  ! ADDITION        [ shift and go to state 118 ]
  ! SUBSTRACTION    [ shift and go to state 119 ]
  ! MULTIPLICATION  [ shift and go to state 120 ]
  ! DIVISION        [ shift and go to state 121 ]
  ! MODULO          [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! CONCAT          [ shift and go to state 125 ]
  ! LESS            [ shift and go to state 126 ]
  ! LESSEQUAL       [ shift and go to state 127 ]
  ! GREATER         [ shift and go to state 128 ]
  ! GREATEREQUAL    [ shift and go to state 129 ]
  ! EQUAL           [ shift and go to state 130 ]
  ! NOTEQUAL        [ shift and go to state 131 ]


state 142

    (56) TypeAssign -> Type IDEN ASSIGNMENT Expression . SEMICOLON
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       shift and go to state 170
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    CONCAT          shift and go to state 125
    LESS            shift and go to state 126
    LESSEQUAL       shift and go to state 127
    GREATER         shift and go to state 128
    GREATEREQUAL    shift and go to state 129
    EQUAL           shift and go to state 130
    NOTEQUAL        shift and go to state 131


state 143

    (57) ReferenceAssign -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression . SEMICOLON
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       shift and go to state 171
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    CONCAT          shift and go to state 125
    LESS            shift and go to state 126
    LESSEQUAL       shift and go to state 127
    GREATER         shift and go to state 128
    GREATEREQUAL    shift and go to state 129
    EQUAL           shift and go to state 130
    NOTEQUAL        shift and go to state 131


state 144

    (61) ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .

    SEMICOLON       reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    COMMA           reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    RIGHTSQRBRACKET reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    RIGHTPARENT     reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    ADDITION        reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    SUBSTRACTION    reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    MULTIPLICATION  reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    DIVISION        reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    MODULO          reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    AND             reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    OR              reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    CONCAT          reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    LESS            reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    LESSEQUAL       reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    GREATER         reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    GREATEREQUAL    reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    EQUAL           reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)
    NOTEQUAL        reduce using rule 61 (ReferenceArgumant -> Reference LEFTPARENT ArgumentList RIGHTPARENT .)


state 145

    (39) Argument -> Expression CommaExpressionList .

    RIGHTPARENT     reduce using rule 39 (Argument -> Expression CommaExpressionList .)


state 146

    (40) CommaExpressionList -> CommaExpression . CommaExpressionList
    (40) CommaExpressionList -> . CommaExpression CommaExpressionList
    (41) CommaExpressionList -> . lambda
    (42) CommaExpression -> . COMMA Expression
    (102) lambda -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 148
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    INT             reduce using rule 102 (lambda -> .)
    BOOLEAN         reduce using rule 102 (lambda -> .)
    VOID            reduce using rule 102 (lambda -> .)
    IDEN            reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    THIS            reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ELSE            reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)

  ! COMMA           [ reduce using rule 102 (lambda -> .) ]

    CommaExpression                shift and go to state 146
    CommaExpressionList            shift and go to state 172
    lambda                         shift and go to state 147

state 147

    (41) CommaExpressionList -> lambda .

    RIGHTPARENT     reduce using rule 41 (CommaExpressionList -> lambda .)


state 148

    (42) CommaExpression -> COMMA . Expression
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 173
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 149

    (58) LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .

    ASSIGNMENT      reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    SEMICOLON       reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    COMMA           reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    RIGHTSQRBRACKET reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    RIGHTPARENT     reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    ADDITION        reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    SUBSTRACTION    reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    MULTIPLICATION  reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    DIVISION        reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    MODULO          reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    AND             reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    OR              reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    CONCAT          reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    LESS            reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    LESSEQUAL       reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    GREATER         reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    GREATEREQUAL    reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    EQUAL           reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    NOTEQUAL        reduce using rule 58 (LEFTSQRBRACKETExpressionRIGHTSQRBRACKET -> LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)


state 150

    (62) IfStatement -> IF LEFTPARENT Expression RIGHTPARENT . Statement ElseStament
    (49) Statement -> . LeftBraceStatementRightBracet
    (50) Statement -> . TypeAssign
    (51) Statement -> . ReferenceAssign
    (52) Statement -> . ReferenceArgumantSemicolon
    (53) Statement -> . IfStatement
    (54) Statement -> . WhileStatement
    (55) LeftBraceStatementRightBracet -> . LEFTBRACE StatementList RIGHTBRACE
    (56) TypeAssign -> . Type IDEN ASSIGNMENT Expression SEMICOLON
    (57) ReferenceAssign -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON
    (60) ReferenceArgumantSemicolon -> . ReferenceArgumant SEMICOLON
    (62) IfStatement -> . IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament
    (65) WhileStatement -> . WHILE LEFTPARENT Expression RIGHTPARENT Statement
    (27) Type -> . PrimType
    (28) Type -> . ClassType
    (29) Type -> . ArrType
    (43) Reference -> . ReferenceType DotIdList
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (30) PrimType -> . INT
    (31) PrimType -> . BOOLEAN
    (32) PrimType -> . VOID
    (33) ClassType -> . IDEN
    (34) ArrType -> . ArrayType LEFTSQRBRACKET RIGHTSQRBRACKET
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN
    (35) ArrayType -> . INT
    (36) ArrayType -> . ClassType

    LEFTBRACE       shift and go to state 49
    IF              shift and go to state 62
    WHILE           shift and go to state 63
    INT             shift and go to state 30
    BOOLEAN         shift and go to state 31
    VOID            shift and go to state 32
    IDEN            shift and go to state 48
    THIS            shift and go to state 65

    Statement                      shift and go to state 174
    LeftBraceStatementRightBracet  shift and go to state 53
    TypeAssign                     shift and go to state 54
    ReferenceAssign                shift and go to state 55
    ReferenceArgumantSemicolon     shift and go to state 56
    IfStatement                    shift and go to state 57
    WhileStatement                 shift and go to state 58
    Type                           shift and go to state 59
    Reference                      shift and go to state 60
    ReferenceArgumant              shift and go to state 61
    PrimType                       shift and go to state 27
    ClassType                      shift and go to state 28
    ArrType                        shift and go to state 29
    ReferenceType                  shift and go to state 64
    ArrayType                      shift and go to state 34

state 151

    (65) WhileStatement -> WHILE LEFTPARENT Expression RIGHTPARENT . Statement
    (49) Statement -> . LeftBraceStatementRightBracet
    (50) Statement -> . TypeAssign
    (51) Statement -> . ReferenceAssign
    (52) Statement -> . ReferenceArgumantSemicolon
    (53) Statement -> . IfStatement
    (54) Statement -> . WhileStatement
    (55) LeftBraceStatementRightBracet -> . LEFTBRACE StatementList RIGHTBRACE
    (56) TypeAssign -> . Type IDEN ASSIGNMENT Expression SEMICOLON
    (57) ReferenceAssign -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON
    (60) ReferenceArgumantSemicolon -> . ReferenceArgumant SEMICOLON
    (62) IfStatement -> . IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament
    (65) WhileStatement -> . WHILE LEFTPARENT Expression RIGHTPARENT Statement
    (27) Type -> . PrimType
    (28) Type -> . ClassType
    (29) Type -> . ArrType
    (43) Reference -> . ReferenceType DotIdList
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (30) PrimType -> . INT
    (31) PrimType -> . BOOLEAN
    (32) PrimType -> . VOID
    (33) ClassType -> . IDEN
    (34) ArrType -> . ArrayType LEFTSQRBRACKET RIGHTSQRBRACKET
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN
    (35) ArrayType -> . INT
    (36) ArrayType -> . ClassType

    LEFTBRACE       shift and go to state 49
    IF              shift and go to state 62
    WHILE           shift and go to state 63
    INT             shift and go to state 30
    BOOLEAN         shift and go to state 31
    VOID            shift and go to state 32
    IDEN            shift and go to state 48
    THIS            shift and go to state 65

    Statement                      shift and go to state 175
    LeftBraceStatementRightBracet  shift and go to state 53
    TypeAssign                     shift and go to state 54
    ReferenceAssign                shift and go to state 55
    ReferenceArgumantSemicolon     shift and go to state 56
    IfStatement                    shift and go to state 57
    WhileStatement                 shift and go to state 58
    Type                           shift and go to state 59
    Reference                      shift and go to state 60
    ReferenceArgumant              shift and go to state 61
    PrimType                       shift and go to state 27
    ClassType                      shift and go to state 28
    ArrType                        shift and go to state 29
    ReferenceType                  shift and go to state 64
    ArrayType                      shift and go to state 34

state 152

    (81) BinopExpression -> Expression ADDITION Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .)
    COMMA           reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .)
    RIGHTSQRBRACKET reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .)
    RIGHTPARENT     reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .)
    ADDITION        reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .)
    SUBSTRACTION    reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .)
    AND             reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .)
    OR              reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .)
    CONCAT          reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .)
    LESS            reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .)
    LESSEQUAL       reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .)
    GREATER         reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .)
    GREATEREQUAL    reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .)
    EQUAL           reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .)
    NOTEQUAL        reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .)
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122

  ! MULTIPLICATION  [ reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .) ]
  ! DIVISION        [ reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .) ]
  ! MODULO          [ reduce using rule 81 (BinopExpression -> Expression ADDITION Expression .) ]
  ! ADDITION        [ shift and go to state 118 ]
  ! SUBSTRACTION    [ shift and go to state 119 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! CONCAT          [ shift and go to state 125 ]
  ! LESS            [ shift and go to state 126 ]
  ! LESSEQUAL       [ shift and go to state 127 ]
  ! GREATER         [ shift and go to state 128 ]
  ! GREATEREQUAL    [ shift and go to state 129 ]
  ! EQUAL           [ shift and go to state 130 ]
  ! NOTEQUAL        [ shift and go to state 131 ]


state 153

    (82) BinopExpression -> Expression SUBSTRACTION Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .)
    COMMA           reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .)
    RIGHTSQRBRACKET reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .)
    RIGHTPARENT     reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .)
    ADDITION        reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .)
    SUBSTRACTION    reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .)
    AND             reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .)
    OR              reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .)
    CONCAT          reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .)
    LESS            reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .)
    LESSEQUAL       reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .)
    GREATER         reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .)
    GREATEREQUAL    reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .)
    EQUAL           reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .)
    NOTEQUAL        reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .)
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122

  ! MULTIPLICATION  [ reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .) ]
  ! DIVISION        [ reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .) ]
  ! MODULO          [ reduce using rule 82 (BinopExpression -> Expression SUBSTRACTION Expression .) ]
  ! ADDITION        [ shift and go to state 118 ]
  ! SUBSTRACTION    [ shift and go to state 119 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! CONCAT          [ shift and go to state 125 ]
  ! LESS            [ shift and go to state 126 ]
  ! LESSEQUAL       [ shift and go to state 127 ]
  ! GREATER         [ shift and go to state 128 ]
  ! GREATEREQUAL    [ shift and go to state 129 ]
  ! EQUAL           [ shift and go to state 130 ]
  ! NOTEQUAL        [ shift and go to state 131 ]


state 154

    (83) BinopExpression -> Expression MULTIPLICATION Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    COMMA           reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    RIGHTSQRBRACKET reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    RIGHTPARENT     reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    ADDITION        reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    SUBSTRACTION    reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    MULTIPLICATION  reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    DIVISION        reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    MODULO          reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    AND             reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    OR              reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    CONCAT          reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    LESS            reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    LESSEQUAL       reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    GREATER         reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    GREATEREQUAL    reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    EQUAL           reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)
    NOTEQUAL        reduce using rule 83 (BinopExpression -> Expression MULTIPLICATION Expression .)

  ! ADDITION        [ shift and go to state 118 ]
  ! SUBSTRACTION    [ shift and go to state 119 ]
  ! MULTIPLICATION  [ shift and go to state 120 ]
  ! DIVISION        [ shift and go to state 121 ]
  ! MODULO          [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! CONCAT          [ shift and go to state 125 ]
  ! LESS            [ shift and go to state 126 ]
  ! LESSEQUAL       [ shift and go to state 127 ]
  ! GREATER         [ shift and go to state 128 ]
  ! GREATEREQUAL    [ shift and go to state 129 ]
  ! EQUAL           [ shift and go to state 130 ]
  ! NOTEQUAL        [ shift and go to state 131 ]


state 155

    (84) BinopExpression -> Expression DIVISION Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    COMMA           reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    RIGHTSQRBRACKET reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    RIGHTPARENT     reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    ADDITION        reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    SUBSTRACTION    reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    MULTIPLICATION  reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    DIVISION        reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    MODULO          reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    AND             reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    OR              reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    CONCAT          reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    LESS            reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    LESSEQUAL       reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    GREATER         reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    GREATEREQUAL    reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    EQUAL           reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)
    NOTEQUAL        reduce using rule 84 (BinopExpression -> Expression DIVISION Expression .)

  ! ADDITION        [ shift and go to state 118 ]
  ! SUBSTRACTION    [ shift and go to state 119 ]
  ! MULTIPLICATION  [ shift and go to state 120 ]
  ! DIVISION        [ shift and go to state 121 ]
  ! MODULO          [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! CONCAT          [ shift and go to state 125 ]
  ! LESS            [ shift and go to state 126 ]
  ! LESSEQUAL       [ shift and go to state 127 ]
  ! GREATER         [ shift and go to state 128 ]
  ! GREATEREQUAL    [ shift and go to state 129 ]
  ! EQUAL           [ shift and go to state 130 ]
  ! NOTEQUAL        [ shift and go to state 131 ]


state 156

    (85) BinopExpression -> Expression MODULO Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    COMMA           reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    RIGHTSQRBRACKET reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    RIGHTPARENT     reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    ADDITION        reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    SUBSTRACTION    reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    MULTIPLICATION  reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    DIVISION        reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    MODULO          reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    AND             reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    OR              reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    CONCAT          reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    LESS            reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    LESSEQUAL       reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    GREATER         reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    GREATEREQUAL    reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    EQUAL           reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)
    NOTEQUAL        reduce using rule 85 (BinopExpression -> Expression MODULO Expression .)

  ! ADDITION        [ shift and go to state 118 ]
  ! SUBSTRACTION    [ shift and go to state 119 ]
  ! MULTIPLICATION  [ shift and go to state 120 ]
  ! DIVISION        [ shift and go to state 121 ]
  ! MODULO          [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! CONCAT          [ shift and go to state 125 ]
  ! LESS            [ shift and go to state 126 ]
  ! LESSEQUAL       [ shift and go to state 127 ]
  ! GREATER         [ shift and go to state 128 ]
  ! GREATEREQUAL    [ shift and go to state 129 ]
  ! EQUAL           [ shift and go to state 130 ]
  ! NOTEQUAL        [ shift and go to state 131 ]


state 157

    (86) BinopExpression -> Expression AND Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       reduce using rule 86 (BinopExpression -> Expression AND Expression .)
    COMMA           reduce using rule 86 (BinopExpression -> Expression AND Expression .)
    RIGHTSQRBRACKET reduce using rule 86 (BinopExpression -> Expression AND Expression .)
    RIGHTPARENT     reduce using rule 86 (BinopExpression -> Expression AND Expression .)
    AND             reduce using rule 86 (BinopExpression -> Expression AND Expression .)
    OR              reduce using rule 86 (BinopExpression -> Expression AND Expression .)
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    CONCAT          shift and go to state 125
    LESS            shift and go to state 126
    LESSEQUAL       shift and go to state 127
    GREATER         shift and go to state 128
    GREATEREQUAL    shift and go to state 129
    EQUAL           shift and go to state 130
    NOTEQUAL        shift and go to state 131

  ! ADDITION        [ reduce using rule 86 (BinopExpression -> Expression AND Expression .) ]
  ! SUBSTRACTION    [ reduce using rule 86 (BinopExpression -> Expression AND Expression .) ]
  ! MULTIPLICATION  [ reduce using rule 86 (BinopExpression -> Expression AND Expression .) ]
  ! DIVISION        [ reduce using rule 86 (BinopExpression -> Expression AND Expression .) ]
  ! MODULO          [ reduce using rule 86 (BinopExpression -> Expression AND Expression .) ]
  ! CONCAT          [ reduce using rule 86 (BinopExpression -> Expression AND Expression .) ]
  ! LESS            [ reduce using rule 86 (BinopExpression -> Expression AND Expression .) ]
  ! LESSEQUAL       [ reduce using rule 86 (BinopExpression -> Expression AND Expression .) ]
  ! GREATER         [ reduce using rule 86 (BinopExpression -> Expression AND Expression .) ]
  ! GREATEREQUAL    [ reduce using rule 86 (BinopExpression -> Expression AND Expression .) ]
  ! EQUAL           [ reduce using rule 86 (BinopExpression -> Expression AND Expression .) ]
  ! NOTEQUAL        [ reduce using rule 86 (BinopExpression -> Expression AND Expression .) ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]


state 158

    (87) BinopExpression -> Expression OR Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       reduce using rule 87 (BinopExpression -> Expression OR Expression .)
    COMMA           reduce using rule 87 (BinopExpression -> Expression OR Expression .)
    RIGHTSQRBRACKET reduce using rule 87 (BinopExpression -> Expression OR Expression .)
    RIGHTPARENT     reduce using rule 87 (BinopExpression -> Expression OR Expression .)
    OR              reduce using rule 87 (BinopExpression -> Expression OR Expression .)
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    AND             shift and go to state 123
    CONCAT          shift and go to state 125
    LESS            shift and go to state 126
    LESSEQUAL       shift and go to state 127
    GREATER         shift and go to state 128
    GREATEREQUAL    shift and go to state 129
    EQUAL           shift and go to state 130
    NOTEQUAL        shift and go to state 131

  ! ADDITION        [ reduce using rule 87 (BinopExpression -> Expression OR Expression .) ]
  ! SUBSTRACTION    [ reduce using rule 87 (BinopExpression -> Expression OR Expression .) ]
  ! MULTIPLICATION  [ reduce using rule 87 (BinopExpression -> Expression OR Expression .) ]
  ! DIVISION        [ reduce using rule 87 (BinopExpression -> Expression OR Expression .) ]
  ! MODULO          [ reduce using rule 87 (BinopExpression -> Expression OR Expression .) ]
  ! AND             [ reduce using rule 87 (BinopExpression -> Expression OR Expression .) ]
  ! CONCAT          [ reduce using rule 87 (BinopExpression -> Expression OR Expression .) ]
  ! LESS            [ reduce using rule 87 (BinopExpression -> Expression OR Expression .) ]
  ! LESSEQUAL       [ reduce using rule 87 (BinopExpression -> Expression OR Expression .) ]
  ! GREATER         [ reduce using rule 87 (BinopExpression -> Expression OR Expression .) ]
  ! GREATEREQUAL    [ reduce using rule 87 (BinopExpression -> Expression OR Expression .) ]
  ! EQUAL           [ reduce using rule 87 (BinopExpression -> Expression OR Expression .) ]
  ! NOTEQUAL        [ reduce using rule 87 (BinopExpression -> Expression OR Expression .) ]
  ! OR              [ shift and go to state 124 ]


state 159

    (88) BinopExpression -> Expression CONCAT Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .)
    COMMA           reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .)
    RIGHTSQRBRACKET reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .)
    RIGHTPARENT     reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .)
    ADDITION        reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .)
    SUBSTRACTION    reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .)
    AND             reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .)
    OR              reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .)
    CONCAT          reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .)
    LESS            reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .)
    LESSEQUAL       reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .)
    GREATER         reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .)
    GREATEREQUAL    reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .)
    EQUAL           reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .)
    NOTEQUAL        reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .)
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122

  ! MULTIPLICATION  [ reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .) ]
  ! DIVISION        [ reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .) ]
  ! MODULO          [ reduce using rule 88 (BinopExpression -> Expression CONCAT Expression .) ]
  ! ADDITION        [ shift and go to state 118 ]
  ! SUBSTRACTION    [ shift and go to state 119 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! CONCAT          [ shift and go to state 125 ]
  ! LESS            [ shift and go to state 126 ]
  ! LESSEQUAL       [ shift and go to state 127 ]
  ! GREATER         [ shift and go to state 128 ]
  ! GREATEREQUAL    [ shift and go to state 129 ]
  ! EQUAL           [ shift and go to state 130 ]
  ! NOTEQUAL        [ shift and go to state 131 ]


state 160

    (89) BinopExpression -> Expression LESS Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       reduce using rule 89 (BinopExpression -> Expression LESS Expression .)
    COMMA           reduce using rule 89 (BinopExpression -> Expression LESS Expression .)
    RIGHTSQRBRACKET reduce using rule 89 (BinopExpression -> Expression LESS Expression .)
    RIGHTPARENT     reduce using rule 89 (BinopExpression -> Expression LESS Expression .)
    AND             reduce using rule 89 (BinopExpression -> Expression LESS Expression .)
    OR              reduce using rule 89 (BinopExpression -> Expression LESS Expression .)
    LESS            reduce using rule 89 (BinopExpression -> Expression LESS Expression .)
    LESSEQUAL       reduce using rule 89 (BinopExpression -> Expression LESS Expression .)
    GREATER         reduce using rule 89 (BinopExpression -> Expression LESS Expression .)
    GREATEREQUAL    reduce using rule 89 (BinopExpression -> Expression LESS Expression .)
    EQUAL           reduce using rule 89 (BinopExpression -> Expression LESS Expression .)
    NOTEQUAL        reduce using rule 89 (BinopExpression -> Expression LESS Expression .)
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    CONCAT          shift and go to state 125

  ! ADDITION        [ reduce using rule 89 (BinopExpression -> Expression LESS Expression .) ]
  ! SUBSTRACTION    [ reduce using rule 89 (BinopExpression -> Expression LESS Expression .) ]
  ! MULTIPLICATION  [ reduce using rule 89 (BinopExpression -> Expression LESS Expression .) ]
  ! DIVISION        [ reduce using rule 89 (BinopExpression -> Expression LESS Expression .) ]
  ! MODULO          [ reduce using rule 89 (BinopExpression -> Expression LESS Expression .) ]
  ! CONCAT          [ reduce using rule 89 (BinopExpression -> Expression LESS Expression .) ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! LESS            [ shift and go to state 126 ]
  ! LESSEQUAL       [ shift and go to state 127 ]
  ! GREATER         [ shift and go to state 128 ]
  ! GREATEREQUAL    [ shift and go to state 129 ]
  ! EQUAL           [ shift and go to state 130 ]
  ! NOTEQUAL        [ shift and go to state 131 ]


state 161

    (90) BinopExpression -> Expression LESSEQUAL Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .)
    COMMA           reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .)
    RIGHTSQRBRACKET reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .)
    RIGHTPARENT     reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .)
    AND             reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .)
    OR              reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .)
    LESS            reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .)
    LESSEQUAL       reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .)
    GREATER         reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .)
    GREATEREQUAL    reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .)
    EQUAL           reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .)
    NOTEQUAL        reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .)
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    CONCAT          shift and go to state 125

  ! ADDITION        [ reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .) ]
  ! SUBSTRACTION    [ reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .) ]
  ! MULTIPLICATION  [ reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .) ]
  ! DIVISION        [ reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .) ]
  ! MODULO          [ reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .) ]
  ! CONCAT          [ reduce using rule 90 (BinopExpression -> Expression LESSEQUAL Expression .) ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! LESS            [ shift and go to state 126 ]
  ! LESSEQUAL       [ shift and go to state 127 ]
  ! GREATER         [ shift and go to state 128 ]
  ! GREATEREQUAL    [ shift and go to state 129 ]
  ! EQUAL           [ shift and go to state 130 ]
  ! NOTEQUAL        [ shift and go to state 131 ]


state 162

    (91) BinopExpression -> Expression GREATER Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       reduce using rule 91 (BinopExpression -> Expression GREATER Expression .)
    COMMA           reduce using rule 91 (BinopExpression -> Expression GREATER Expression .)
    RIGHTSQRBRACKET reduce using rule 91 (BinopExpression -> Expression GREATER Expression .)
    RIGHTPARENT     reduce using rule 91 (BinopExpression -> Expression GREATER Expression .)
    AND             reduce using rule 91 (BinopExpression -> Expression GREATER Expression .)
    OR              reduce using rule 91 (BinopExpression -> Expression GREATER Expression .)
    LESS            reduce using rule 91 (BinopExpression -> Expression GREATER Expression .)
    LESSEQUAL       reduce using rule 91 (BinopExpression -> Expression GREATER Expression .)
    GREATER         reduce using rule 91 (BinopExpression -> Expression GREATER Expression .)
    GREATEREQUAL    reduce using rule 91 (BinopExpression -> Expression GREATER Expression .)
    EQUAL           reduce using rule 91 (BinopExpression -> Expression GREATER Expression .)
    NOTEQUAL        reduce using rule 91 (BinopExpression -> Expression GREATER Expression .)
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    CONCAT          shift and go to state 125

  ! ADDITION        [ reduce using rule 91 (BinopExpression -> Expression GREATER Expression .) ]
  ! SUBSTRACTION    [ reduce using rule 91 (BinopExpression -> Expression GREATER Expression .) ]
  ! MULTIPLICATION  [ reduce using rule 91 (BinopExpression -> Expression GREATER Expression .) ]
  ! DIVISION        [ reduce using rule 91 (BinopExpression -> Expression GREATER Expression .) ]
  ! MODULO          [ reduce using rule 91 (BinopExpression -> Expression GREATER Expression .) ]
  ! CONCAT          [ reduce using rule 91 (BinopExpression -> Expression GREATER Expression .) ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! LESS            [ shift and go to state 126 ]
  ! LESSEQUAL       [ shift and go to state 127 ]
  ! GREATER         [ shift and go to state 128 ]
  ! GREATEREQUAL    [ shift and go to state 129 ]
  ! EQUAL           [ shift and go to state 130 ]
  ! NOTEQUAL        [ shift and go to state 131 ]


state 163

    (92) BinopExpression -> Expression GREATEREQUAL Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .)
    COMMA           reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .)
    RIGHTSQRBRACKET reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .)
    RIGHTPARENT     reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .)
    AND             reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .)
    OR              reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .)
    LESS            reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .)
    LESSEQUAL       reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .)
    GREATER         reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .)
    GREATEREQUAL    reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .)
    EQUAL           reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .)
    NOTEQUAL        reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .)
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    CONCAT          shift and go to state 125

  ! ADDITION        [ reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .) ]
  ! SUBSTRACTION    [ reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .) ]
  ! MULTIPLICATION  [ reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .) ]
  ! DIVISION        [ reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .) ]
  ! MODULO          [ reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .) ]
  ! CONCAT          [ reduce using rule 92 (BinopExpression -> Expression GREATEREQUAL Expression .) ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! LESS            [ shift and go to state 126 ]
  ! LESSEQUAL       [ shift and go to state 127 ]
  ! GREATER         [ shift and go to state 128 ]
  ! GREATEREQUAL    [ shift and go to state 129 ]
  ! EQUAL           [ shift and go to state 130 ]
  ! NOTEQUAL        [ shift and go to state 131 ]


state 164

    (93) BinopExpression -> Expression EQUAL Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .)
    COMMA           reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .)
    RIGHTSQRBRACKET reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .)
    RIGHTPARENT     reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .)
    AND             reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .)
    OR              reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .)
    EQUAL           reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .)
    NOTEQUAL        reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .)
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    CONCAT          shift and go to state 125
    LESS            shift and go to state 126
    LESSEQUAL       shift and go to state 127
    GREATER         shift and go to state 128
    GREATEREQUAL    shift and go to state 129

  ! ADDITION        [ reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .) ]
  ! SUBSTRACTION    [ reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .) ]
  ! MULTIPLICATION  [ reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .) ]
  ! DIVISION        [ reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .) ]
  ! MODULO          [ reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .) ]
  ! CONCAT          [ reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .) ]
  ! LESS            [ reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .) ]
  ! LESSEQUAL       [ reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .) ]
  ! GREATER         [ reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .) ]
  ! GREATEREQUAL    [ reduce using rule 93 (BinopExpression -> Expression EQUAL Expression .) ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 130 ]
  ! NOTEQUAL        [ shift and go to state 131 ]


state 165

    (94) BinopExpression -> Expression NOTEQUAL Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    SEMICOLON       reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .)
    COMMA           reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .)
    RIGHTSQRBRACKET reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .)
    RIGHTPARENT     reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .)
    AND             reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .)
    OR              reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .)
    EQUAL           reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .)
    NOTEQUAL        reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .)
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    CONCAT          shift and go to state 125
    LESS            shift and go to state 126
    LESSEQUAL       shift and go to state 127
    GREATER         shift and go to state 128
    GREATEREQUAL    shift and go to state 129

  ! ADDITION        [ reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .) ]
  ! SUBSTRACTION    [ reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .) ]
  ! MULTIPLICATION  [ reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .) ]
  ! DIVISION        [ reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .) ]
  ! MODULO          [ reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .) ]
  ! CONCAT          [ reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .) ]
  ! LESS            [ reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .) ]
  ! LESSEQUAL       [ reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .) ]
  ! GREATER         [ reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .) ]
  ! GREATEREQUAL    [ reduce using rule 94 (BinopExpression -> Expression NOTEQUAL Expression .) ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! EQUAL           [ shift and go to state 130 ]
  ! NOTEQUAL        [ shift and go to state 131 ]


state 166

    (80) LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .

    SEMICOLON       reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    COMMA           reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    RIGHTSQRBRACKET reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    RIGHTPARENT     reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    ADDITION        reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    SUBSTRACTION    reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    MULTIPLICATION  reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    DIVISION        reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    MODULO          reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    AND             reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    OR              reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    CONCAT          reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    LESS            reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    LESSEQUAL       reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    GREATER         reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    GREATEREQUAL    reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    EQUAL           reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)
    NOTEQUAL        reduce using rule 80 (LEFTPARENTExpressionRIGHTPARENT -> LEFTPARENT Expression RIGHTPARENT .)


state 167

    (99) NewClass -> IDEN LEFTPARENT . RIGHTPARENT

    RIGHTPARENT     shift and go to state 176


state 168

    (101) NewIdArray -> IDEN LEFTSQRBRACKET . Expression RIGHTSQRBRACKET
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 177
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 169

    (100) NewIntArray -> INT LEFTSQRBRACKET . Expression RIGHTSQRBRACKET
    (66) Expression -> . ReferenceExpression
    (67) Expression -> . ReferenceArgumant
    (68) Expression -> . UnopExpression
    (69) Expression -> . LEFTPARENTExpressionRIGHTPARENT
    (70) Expression -> . BinopExpression
    (71) Expression -> . NUMBER
    (72) Expression -> . TRUE
    (73) Expression -> . FALSE
    (74) Expression -> . NewInstance
    (75) ReferenceExpression -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (76) UnopExpression -> . UnaryMinus
    (77) UnopExpression -> . UnaryNot
    (80) LEFTPARENTExpressionRIGHTPARENT -> . LEFTPARENT Expression RIGHTPARENT
    (81) BinopExpression -> . Expression ADDITION Expression
    (82) BinopExpression -> . Expression SUBSTRACTION Expression
    (83) BinopExpression -> . Expression MULTIPLICATION Expression
    (84) BinopExpression -> . Expression DIVISION Expression
    (85) BinopExpression -> . Expression MODULO Expression
    (86) BinopExpression -> . Expression AND Expression
    (87) BinopExpression -> . Expression OR Expression
    (88) BinopExpression -> . Expression CONCAT Expression
    (89) BinopExpression -> . Expression LESS Expression
    (90) BinopExpression -> . Expression LESSEQUAL Expression
    (91) BinopExpression -> . Expression GREATER Expression
    (92) BinopExpression -> . Expression GREATEREQUAL Expression
    (93) BinopExpression -> . Expression EQUAL Expression
    (94) BinopExpression -> . Expression NOTEQUAL Expression
    (95) NewInstance -> . NEW NewObject
    (43) Reference -> . ReferenceType DotIdList
    (79) UnaryMinus -> . SUBSTRACTION Expression
    (78) UnaryNot -> . NOT Expression
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN

    NUMBER          shift and go to state 94
    TRUE            shift and go to state 95
    FALSE           shift and go to state 96
    LEFTPARENT      shift and go to state 99
    NEW             shift and go to state 103
    SUBSTRACTION    shift and go to state 102
    NOT             shift and go to state 104
    THIS            shift and go to state 65
    IDEN            shift and go to state 105

    Expression                     shift and go to state 178
    ReferenceExpression            shift and go to state 89
    ReferenceArgumant              shift and go to state 90
    UnopExpression                 shift and go to state 91
    LEFTPARENTExpressionRIGHTPARENT shift and go to state 92
    BinopExpression                shift and go to state 93
    NewInstance                    shift and go to state 97
    Reference                      shift and go to state 98
    UnaryMinus                     shift and go to state 100
    UnaryNot                       shift and go to state 101
    ReferenceType                  shift and go to state 64

state 170

    (56) TypeAssign -> Type IDEN ASSIGNMENT Expression SEMICOLON .

    LEFTBRACE       reduce using rule 56 (TypeAssign -> Type IDEN ASSIGNMENT Expression SEMICOLON .)
    IF              reduce using rule 56 (TypeAssign -> Type IDEN ASSIGNMENT Expression SEMICOLON .)
    WHILE           reduce using rule 56 (TypeAssign -> Type IDEN ASSIGNMENT Expression SEMICOLON .)
    INT             reduce using rule 56 (TypeAssign -> Type IDEN ASSIGNMENT Expression SEMICOLON .)
    BOOLEAN         reduce using rule 56 (TypeAssign -> Type IDEN ASSIGNMENT Expression SEMICOLON .)
    VOID            reduce using rule 56 (TypeAssign -> Type IDEN ASSIGNMENT Expression SEMICOLON .)
    IDEN            reduce using rule 56 (TypeAssign -> Type IDEN ASSIGNMENT Expression SEMICOLON .)
    THIS            reduce using rule 56 (TypeAssign -> Type IDEN ASSIGNMENT Expression SEMICOLON .)
    RETURN          reduce using rule 56 (TypeAssign -> Type IDEN ASSIGNMENT Expression SEMICOLON .)
    RIGHTBRACE      reduce using rule 56 (TypeAssign -> Type IDEN ASSIGNMENT Expression SEMICOLON .)
    ELSE            reduce using rule 56 (TypeAssign -> Type IDEN ASSIGNMENT Expression SEMICOLON .)


state 171

    (57) ReferenceAssign -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON .

    LEFTBRACE       reduce using rule 57 (ReferenceAssign -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON .)
    IF              reduce using rule 57 (ReferenceAssign -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON .)
    WHILE           reduce using rule 57 (ReferenceAssign -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON .)
    INT             reduce using rule 57 (ReferenceAssign -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON .)
    BOOLEAN         reduce using rule 57 (ReferenceAssign -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON .)
    VOID            reduce using rule 57 (ReferenceAssign -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON .)
    IDEN            reduce using rule 57 (ReferenceAssign -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON .)
    THIS            reduce using rule 57 (ReferenceAssign -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON .)
    RETURN          reduce using rule 57 (ReferenceAssign -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON .)
    RIGHTBRACE      reduce using rule 57 (ReferenceAssign -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON .)
    ELSE            reduce using rule 57 (ReferenceAssign -> Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON .)


state 172

    (40) CommaExpressionList -> CommaExpression CommaExpressionList .

    RIGHTPARENT     reduce using rule 40 (CommaExpressionList -> CommaExpression CommaExpressionList .)


state 173

    (42) CommaExpression -> COMMA Expression .
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    COMMA           reduce using rule 42 (CommaExpression -> COMMA Expression .)
    RIGHTPARENT     reduce using rule 42 (CommaExpression -> COMMA Expression .)
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    CONCAT          shift and go to state 125
    LESS            shift and go to state 126
    LESSEQUAL       shift and go to state 127
    GREATER         shift and go to state 128
    GREATEREQUAL    shift and go to state 129
    EQUAL           shift and go to state 130
    NOTEQUAL        shift and go to state 131


state 174

    (62) IfStatement -> IF LEFTPARENT Expression RIGHTPARENT Statement . ElseStament
    (63) ElseStament -> . ELSE Statement
    (64) ElseStament -> . lambda
    (102) lambda -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 180
    $end            reduce using rule 102 (lambda -> .)
    RIGHTBRACE      reduce using rule 102 (lambda -> .)
    STATIC          reduce using rule 102 (lambda -> .)
    INT             reduce using rule 102 (lambda -> .)
    BOOLEAN         reduce using rule 102 (lambda -> .)
    VOID            reduce using rule 102 (lambda -> .)
    IDEN            reduce using rule 102 (lambda -> .)
    RIGHTPARENT     reduce using rule 102 (lambda -> .)
    RETURN          reduce using rule 102 (lambda -> .)
    ASSIGNMENT      reduce using rule 102 (lambda -> .)
    LEFTBRACE       reduce using rule 102 (lambda -> .)
    IF              reduce using rule 102 (lambda -> .)
    WHILE           reduce using rule 102 (lambda -> .)
    THIS            reduce using rule 102 (lambda -> .)
    LEFTSQRBRACKET  reduce using rule 102 (lambda -> .)
    LEFTPARENT      reduce using rule 102 (lambda -> .)
    SEMICOLON       reduce using rule 102 (lambda -> .)
    COMMA           reduce using rule 102 (lambda -> .)
    RIGHTSQRBRACKET reduce using rule 102 (lambda -> .)
    ADDITION        reduce using rule 102 (lambda -> .)
    SUBSTRACTION    reduce using rule 102 (lambda -> .)
    MULTIPLICATION  reduce using rule 102 (lambda -> .)
    DIVISION        reduce using rule 102 (lambda -> .)
    MODULO          reduce using rule 102 (lambda -> .)
    AND             reduce using rule 102 (lambda -> .)
    OR              reduce using rule 102 (lambda -> .)
    CONCAT          reduce using rule 102 (lambda -> .)
    LESS            reduce using rule 102 (lambda -> .)
    LESSEQUAL       reduce using rule 102 (lambda -> .)
    GREATER         reduce using rule 102 (lambda -> .)
    GREATEREQUAL    reduce using rule 102 (lambda -> .)
    EQUAL           reduce using rule 102 (lambda -> .)
    NOTEQUAL        reduce using rule 102 (lambda -> .)

  ! ELSE            [ reduce using rule 102 (lambda -> .) ]

    ElseStament                    shift and go to state 179
    lambda                         shift and go to state 181

state 175

    (65) WhileStatement -> WHILE LEFTPARENT Expression RIGHTPARENT Statement .

    LEFTBRACE       reduce using rule 65 (WhileStatement -> WHILE LEFTPARENT Expression RIGHTPARENT Statement .)
    IF              reduce using rule 65 (WhileStatement -> WHILE LEFTPARENT Expression RIGHTPARENT Statement .)
    WHILE           reduce using rule 65 (WhileStatement -> WHILE LEFTPARENT Expression RIGHTPARENT Statement .)
    INT             reduce using rule 65 (WhileStatement -> WHILE LEFTPARENT Expression RIGHTPARENT Statement .)
    BOOLEAN         reduce using rule 65 (WhileStatement -> WHILE LEFTPARENT Expression RIGHTPARENT Statement .)
    VOID            reduce using rule 65 (WhileStatement -> WHILE LEFTPARENT Expression RIGHTPARENT Statement .)
    IDEN            reduce using rule 65 (WhileStatement -> WHILE LEFTPARENT Expression RIGHTPARENT Statement .)
    THIS            reduce using rule 65 (WhileStatement -> WHILE LEFTPARENT Expression RIGHTPARENT Statement .)
    RETURN          reduce using rule 65 (WhileStatement -> WHILE LEFTPARENT Expression RIGHTPARENT Statement .)
    RIGHTBRACE      reduce using rule 65 (WhileStatement -> WHILE LEFTPARENT Expression RIGHTPARENT Statement .)
    ELSE            reduce using rule 65 (WhileStatement -> WHILE LEFTPARENT Expression RIGHTPARENT Statement .)


state 176

    (99) NewClass -> IDEN LEFTPARENT RIGHTPARENT .

    SEMICOLON       reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    COMMA           reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    RIGHTSQRBRACKET reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    RIGHTPARENT     reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    ADDITION        reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    SUBSTRACTION    reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    MULTIPLICATION  reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    DIVISION        reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    MODULO          reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    AND             reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    OR              reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    CONCAT          reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    LESS            reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    LESSEQUAL       reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    GREATER         reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    GREATEREQUAL    reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    EQUAL           reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)
    NOTEQUAL        reduce using rule 99 (NewClass -> IDEN LEFTPARENT RIGHTPARENT .)


state 177

    (101) NewIdArray -> IDEN LEFTSQRBRACKET Expression . RIGHTSQRBRACKET
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    RIGHTSQRBRACKET shift and go to state 182
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    CONCAT          shift and go to state 125
    LESS            shift and go to state 126
    LESSEQUAL       shift and go to state 127
    GREATER         shift and go to state 128
    GREATEREQUAL    shift and go to state 129
    EQUAL           shift and go to state 130
    NOTEQUAL        shift and go to state 131


state 178

    (100) NewIntArray -> INT LEFTSQRBRACKET Expression . RIGHTSQRBRACKET
    (81) BinopExpression -> Expression . ADDITION Expression
    (82) BinopExpression -> Expression . SUBSTRACTION Expression
    (83) BinopExpression -> Expression . MULTIPLICATION Expression
    (84) BinopExpression -> Expression . DIVISION Expression
    (85) BinopExpression -> Expression . MODULO Expression
    (86) BinopExpression -> Expression . AND Expression
    (87) BinopExpression -> Expression . OR Expression
    (88) BinopExpression -> Expression . CONCAT Expression
    (89) BinopExpression -> Expression . LESS Expression
    (90) BinopExpression -> Expression . LESSEQUAL Expression
    (91) BinopExpression -> Expression . GREATER Expression
    (92) BinopExpression -> Expression . GREATEREQUAL Expression
    (93) BinopExpression -> Expression . EQUAL Expression
    (94) BinopExpression -> Expression . NOTEQUAL Expression

    RIGHTSQRBRACKET shift and go to state 183
    ADDITION        shift and go to state 118
    SUBSTRACTION    shift and go to state 119
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 121
    MODULO          shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    CONCAT          shift and go to state 125
    LESS            shift and go to state 126
    LESSEQUAL       shift and go to state 127
    GREATER         shift and go to state 128
    GREATEREQUAL    shift and go to state 129
    EQUAL           shift and go to state 130
    NOTEQUAL        shift and go to state 131


state 179

    (62) IfStatement -> IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament .

    LEFTBRACE       reduce using rule 62 (IfStatement -> IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament .)
    IF              reduce using rule 62 (IfStatement -> IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament .)
    WHILE           reduce using rule 62 (IfStatement -> IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament .)
    INT             reduce using rule 62 (IfStatement -> IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament .)
    BOOLEAN         reduce using rule 62 (IfStatement -> IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament .)
    VOID            reduce using rule 62 (IfStatement -> IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament .)
    IDEN            reduce using rule 62 (IfStatement -> IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament .)
    THIS            reduce using rule 62 (IfStatement -> IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament .)
    RETURN          reduce using rule 62 (IfStatement -> IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament .)
    RIGHTBRACE      reduce using rule 62 (IfStatement -> IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament .)
    ELSE            reduce using rule 62 (IfStatement -> IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament .)


state 180

    (63) ElseStament -> ELSE . Statement
    (49) Statement -> . LeftBraceStatementRightBracet
    (50) Statement -> . TypeAssign
    (51) Statement -> . ReferenceAssign
    (52) Statement -> . ReferenceArgumantSemicolon
    (53) Statement -> . IfStatement
    (54) Statement -> . WhileStatement
    (55) LeftBraceStatementRightBracet -> . LEFTBRACE StatementList RIGHTBRACE
    (56) TypeAssign -> . Type IDEN ASSIGNMENT Expression SEMICOLON
    (57) ReferenceAssign -> . Reference LEFTSQRBRACKETExpressionRIGHTSQRBRACKET ASSIGNMENT Expression SEMICOLON
    (60) ReferenceArgumantSemicolon -> . ReferenceArgumant SEMICOLON
    (62) IfStatement -> . IF LEFTPARENT Expression RIGHTPARENT Statement ElseStament
    (65) WhileStatement -> . WHILE LEFTPARENT Expression RIGHTPARENT Statement
    (27) Type -> . PrimType
    (28) Type -> . ClassType
    (29) Type -> . ArrType
    (43) Reference -> . ReferenceType DotIdList
    (61) ReferenceArgumant -> . Reference LEFTPARENT ArgumentList RIGHTPARENT
    (30) PrimType -> . INT
    (31) PrimType -> . BOOLEAN
    (32) PrimType -> . VOID
    (33) ClassType -> . IDEN
    (34) ArrType -> . ArrayType LEFTSQRBRACKET RIGHTSQRBRACKET
    (44) ReferenceType -> . THIS
    (45) ReferenceType -> . IDEN
    (35) ArrayType -> . INT
    (36) ArrayType -> . ClassType

    LEFTBRACE       shift and go to state 49
    IF              shift and go to state 62
    WHILE           shift and go to state 63
    INT             shift and go to state 30
    BOOLEAN         shift and go to state 31
    VOID            shift and go to state 32
    IDEN            shift and go to state 48
    THIS            shift and go to state 65

    Statement                      shift and go to state 184
    LeftBraceStatementRightBracet  shift and go to state 53
    TypeAssign                     shift and go to state 54
    ReferenceAssign                shift and go to state 55
    ReferenceArgumantSemicolon     shift and go to state 56
    IfStatement                    shift and go to state 57
    WhileStatement                 shift and go to state 58
    Type                           shift and go to state 59
    Reference                      shift and go to state 60
    ReferenceArgumant              shift and go to state 61
    PrimType                       shift and go to state 27
    ClassType                      shift and go to state 28
    ArrType                        shift and go to state 29
    ReferenceType                  shift and go to state 64
    ArrayType                      shift and go to state 34

state 181

    (64) ElseStament -> lambda .

    LEFTBRACE       reduce using rule 64 (ElseStament -> lambda .)
    IF              reduce using rule 64 (ElseStament -> lambda .)
    WHILE           reduce using rule 64 (ElseStament -> lambda .)
    INT             reduce using rule 64 (ElseStament -> lambda .)
    BOOLEAN         reduce using rule 64 (ElseStament -> lambda .)
    VOID            reduce using rule 64 (ElseStament -> lambda .)
    IDEN            reduce using rule 64 (ElseStament -> lambda .)
    THIS            reduce using rule 64 (ElseStament -> lambda .)
    RETURN          reduce using rule 64 (ElseStament -> lambda .)
    RIGHTBRACE      reduce using rule 64 (ElseStament -> lambda .)
    ELSE            reduce using rule 64 (ElseStament -> lambda .)


state 182

    (101) NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .

    SEMICOLON       reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    COMMA           reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    RIGHTSQRBRACKET reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    RIGHTPARENT     reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    ADDITION        reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    SUBSTRACTION    reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    MULTIPLICATION  reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    DIVISION        reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    MODULO          reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    AND             reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    OR              reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    CONCAT          reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    LESS            reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    LESSEQUAL       reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    GREATER         reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    GREATEREQUAL    reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    EQUAL           reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    NOTEQUAL        reduce using rule 101 (NewIdArray -> IDEN LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)


state 183

    (100) NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .

    SEMICOLON       reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    COMMA           reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    RIGHTSQRBRACKET reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    RIGHTPARENT     reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    ADDITION        reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    SUBSTRACTION    reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    MULTIPLICATION  reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    DIVISION        reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    MODULO          reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    AND             reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    OR              reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    CONCAT          reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    LESS            reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    LESSEQUAL       reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    GREATER         reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    GREATEREQUAL    reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    EQUAL           reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)
    NOTEQUAL        reduce using rule 100 (NewIntArray -> INT LEFTSQRBRACKET Expression RIGHTSQRBRACKET .)


state 184

    (63) ElseStament -> ELSE Statement .

    LEFTBRACE       reduce using rule 63 (ElseStament -> ELSE Statement .)
    IF              reduce using rule 63 (ElseStament -> ELSE Statement .)
    WHILE           reduce using rule 63 (ElseStament -> ELSE Statement .)
    INT             reduce using rule 63 (ElseStament -> ELSE Statement .)
    BOOLEAN         reduce using rule 63 (ElseStament -> ELSE Statement .)
    VOID            reduce using rule 63 (ElseStament -> ELSE Statement .)
    IDEN            reduce using rule 63 (ElseStament -> ELSE Statement .)
    THIS            reduce using rule 63 (ElseStament -> ELSE Statement .)
    RETURN          reduce using rule 63 (ElseStament -> ELSE Statement .)
    RIGHTBRACE      reduce using rule 63 (ElseStament -> ELSE Statement .)
    ELSE            reduce using rule 63 (ElseStament -> ELSE Statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for STATIC in state 15 resolved as shift
WARNING: shift/reduce conflict for INT in state 25 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 25 resolved as shift
WARNING: shift/reduce conflict for VOID in state 25 resolved as shift
WARNING: shift/reduce conflict for IDEN in state 25 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 41 resolved as shift
WARNING: shift/reduce conflict for LEFTBRACE in state 43 resolved as shift
WARNING: shift/reduce conflict for IF in state 43 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 43 resolved as shift
WARNING: shift/reduce conflict for INT in state 43 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 43 resolved as shift
WARNING: shift/reduce conflict for VOID in state 43 resolved as shift
WARNING: shift/reduce conflict for IDEN in state 43 resolved as shift
WARNING: shift/reduce conflict for THIS in state 43 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 45 resolved as shift
WARNING: shift/reduce conflict for LEFTBRACE in state 49 resolved as shift
WARNING: shift/reduce conflict for IF in state 49 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 49 resolved as shift
WARNING: shift/reduce conflict for INT in state 49 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 49 resolved as shift
WARNING: shift/reduce conflict for VOID in state 49 resolved as shift
WARNING: shift/reduce conflict for IDEN in state 49 resolved as shift
WARNING: shift/reduce conflict for THIS in state 49 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 50 resolved as shift
WARNING: shift/reduce conflict for LEFTBRACE in state 51 resolved as shift
WARNING: shift/reduce conflict for IF in state 51 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 51 resolved as shift
WARNING: shift/reduce conflict for INT in state 51 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 51 resolved as shift
WARNING: shift/reduce conflict for VOID in state 51 resolved as shift
WARNING: shift/reduce conflict for IDEN in state 51 resolved as shift
WARNING: shift/reduce conflict for THIS in state 51 resolved as shift
WARNING: shift/reduce conflict for LEFTSQRBRACKET in state 60 resolved as shift
WARNING: shift/reduce conflict for LEFTPARENT in state 60 resolved as shift
WARNING: shift/reduce conflict for LEFTPARENT in state 75 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 75 resolved as shift
WARNING: shift/reduce conflict for THIS in state 75 resolved as shift
WARNING: shift/reduce conflict for IDEN in state 75 resolved as shift
WARNING: shift/reduce conflict for LEFTSQRBRACKET in state 98 resolved as shift
WARNING: shift/reduce conflict for LEFTPARENT in state 98 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 111 resolved as shift
WARNING: shift/reduce conflict for ADDITION in state 111 resolved as shift
WARNING: shift/reduce conflict for SUBSTRACTION in state 111 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICATION in state 111 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 111 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 111 resolved as shift
WARNING: shift/reduce conflict for AND in state 111 resolved as shift
WARNING: shift/reduce conflict for OR in state 111 resolved as shift
WARNING: shift/reduce conflict for CONCAT in state 111 resolved as shift
WARNING: shift/reduce conflict for LESS in state 111 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 111 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 111 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 111 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 111 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 111 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 146 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 174 resolved as shift
WARNING: reduce/reduce conflict in state 48 resolved using rule (ClassType -> IDEN)
WARNING: rejected rule (ReferenceType -> IDEN) in state 48
